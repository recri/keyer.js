{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/Keyer.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Keyer",
          "members": [
            {
              "kind": "field",
              "name": "output",
              "default": "new KeyerOutput(this.context)"
            },
            {
              "kind": "field",
              "name": "outputDecoder",
              "default": "new KeyerDecode(this.context)"
            },
            {
              "kind": "field",
              "name": "input",
              "default": "new KeyerInput(this.context)"
            },
            {
              "kind": "field",
              "name": "inputDecoder",
              "default": "new KeyerDecode(this.context)"
            },
            {
              "kind": "field",
              "name": "midiSource",
              "default": "new KeyerMidiSource(this.context)"
            },
            {
              "kind": "field",
              "name": "microphone",
              "default": "new KeyerMicrophone(this.context)"
            },
            {
              "kind": "field",
              "name": "scope",
              "default": "new KeyerScope(this.context)"
            },
            {
              "kind": "field",
              "name": "table"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Keyer",
          "declaration": {
            "name": "Keyer",
            "module": "src/Keyer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerASKProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerASKWorklet.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerASKWorklet",
          "members": [
            {
              "kind": "method",
              "name": "onmessage",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onmessageerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onprocessorerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_update",
              "parameters": [
                {
                  "name": "prop"
                },
                {
                  "name": "val"
                },
                {
                  "name": "riseChanges"
                },
                {
                  "name": "fallChanges"
                }
              ]
            },
            {
              "kind": "field",
              "name": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2"
            },
            {
              "kind": "field",
              "name": "rise"
            },
            {
              "kind": "field",
              "name": "fall"
            },
            {
              "kind": "field",
              "name": "ramps",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "eparent",
              "default": "eparent"
            },
            {
              "kind": "field",
              "name": "sampleRate"
            },
            {
              "kind": "field",
              "name": "onmessage"
            },
            {
              "kind": "field",
              "name": "onmessageerror"
            },
            {
              "kind": "field",
              "name": "onprocessorerror"
            },
            {
              "kind": "field",
              "name": "_envelope",
              "type": {
                "text": "string"
              },
              "default": "'hann'"
            },
            {
              "kind": "field",
              "name": "_envelope2",
              "type": {
                "text": "string"
              },
              "default": "'rectangular'"
            },
            {
              "kind": "field",
              "name": "_rise",
              "type": {
                "text": "number"
              },
              "default": "4"
            },
            {
              "kind": "field",
              "name": "_ramps"
            }
          ],
          "superclass": {
            "name": "AudioWorkletNode",
            "module": "src/KeyerASKWorklet.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerASKWorklet",
          "declaration": {
            "name": "KeyerASKWorklet",
            "module": "src/KeyerASKWorklet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerDecode.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDecode",
          "members": [
            {
              "kind": "method",
              "name": "elementTimeoutFun"
            },
            {
              "kind": "method",
              "name": "onelement",
              "parameters": [
                {
                  "name": "elt"
                },
                {
                  "name": "timeEnded"
                }
              ]
            },
            {
              "kind": "field",
              "name": "table",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "elements",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "elementTimeout",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "configure",
              "parameters": [
                {
                  "name": "wpm"
                },
                {
                  "name": "word"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "detimeProcess",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "ontransition",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "wpm",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "word",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "estimate",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nDit",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nDah",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIes",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIls",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIws",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "scriptNode",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onaudioprocess",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerDetime",
            "module": "/src/KeyerDetime.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDecode",
          "declaration": {
            "name": "KeyerDecode",
            "module": "src/KeyerDecode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerDetime.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDetime",
          "members": [
            {
              "kind": "method",
              "name": "configure",
              "parameters": [
                {
                  "name": "wpm"
                },
                {
                  "name": "word"
                }
              ]
            },
            {
              "kind": "method",
              "name": "detimeProcess",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "ontransition",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "field",
              "name": "wpm",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "word",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "estimate",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "nDit",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nDah",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIes",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIls",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIws",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "scriptNode",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onaudioprocess",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerDetone",
            "module": "/src/KeyerDetone.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDetime",
          "declaration": {
            "name": "KeyerDetime",
            "module": "src/KeyerDetime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerDetone.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDetone",
          "members": [
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ]
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ]
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ]
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ]
            },
            {
              "kind": "field",
              "name": "scriptNode"
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600"
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100"
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)"
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "onaudioprocess"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDetone",
          "declaration": {
            "name": "KeyerDetone",
            "module": "src/KeyerDetone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerEvent.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerEvent",
          "members": [
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events"
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback"
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered"
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer."
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer."
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext"
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerEvent",
          "declaration": {
            "name": "KeyerEvent",
            "module": "src/KeyerEvent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerInput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerInput",
          "members": [
            {
              "kind": "field",
              "name": "straightKey",
              "type": {
                "text": "string"
              },
              "default": "'ControlLeft'"
            },
            {
              "kind": "field",
              "name": "leftPaddleKey",
              "type": {
                "text": "string"
              },
              "default": "'AltRight'"
            },
            {
              "kind": "field",
              "name": "rightPaddleKey",
              "type": {
                "text": "string"
              },
              "default": "'ControlRight'"
            },
            {
              "kind": "field",
              "name": "straightMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "field",
              "name": "leftPaddleMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "field",
              "name": "rightPaddleMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "method",
              "name": "createPaddleWorklet",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "mode"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keyer",
              "type": {
                "text": "string"
              },
              "default": "'nd7pa-b'"
            },
            {
              "kind": "field",
              "name": "swapped",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onmidi",
              "parameters": [
                {
                  "name": "note"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyboardKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "touchKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "mouseKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyLeft"
            },
            {
              "kind": "field",
              "name": "keyRight"
            },
            {
              "kind": "field",
              "name": "left"
            },
            {
              "kind": "field",
              "name": "right"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyerList",
              "type": {
                "text": "array"
              },
              "default": "[ 'none', 'nd7pa-a', 'nd7pa-b', 'vk6ph-a', 'vk6ph-b', 'vk6ph-s' ]"
            },
            {
              "kind": "field",
              "name": "paddle",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "touched",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "pitch",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "gain",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "rise",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "fall",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope2",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "cursor",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyStraight",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "cancel",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "oscillator",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ramp",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerPlayer",
            "module": "/src/KeyerPlayer.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerInput",
          "declaration": {
            "name": "KeyerInput",
            "module": "src/KeyerInput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerInputDelegate.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerInputDelegate",
          "members": [
            {
              "kind": "field",
              "name": "keySounds",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keySlews",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "cursor",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "keyStraight",
              "parameters": [
                {
                  "name": "onoff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "field",
              "name": "perRawDit",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perDit",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perDah",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIls",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIws",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "rise",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fall",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "input",
              "default": "input"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerInputDelegate",
          "declaration": {
            "name": "KeyerInputDelegate",
            "module": "src/KeyerInputDelegate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerMicrophone.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerMicrophone",
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerMicrophone",
          "declaration": {
            "name": "KeyerMicrophone",
            "module": "src/KeyerMicrophone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerMidiSource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerMidiSource",
          "members": [
            {
              "kind": "method",
              "name": "onmidimessage",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "shorten",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "lengthen",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "rawnames",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inputs",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "outputs",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "notes",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "rebind"
            },
            {
              "kind": "method",
              "name": "onStateChange"
            },
            {
              "kind": "method",
              "name": "onMIDISuccess",
              "parameters": [
                {
                  "name": "midiAccess"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMIDIFailure"
            },
            {
              "kind": "method",
              "name": "refresh"
            },
            {
              "kind": "field",
              "name": "midiAvailable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "midiAccess",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "notesCache",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "notesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "namesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "rawNamesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerMidiSource",
          "declaration": {
            "name": "KeyerMidiSource",
            "module": "src/KeyerMidiSource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerOutput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerOutput",
          "members": [
            {
              "kind": "method",
              "name": "unsend"
            },
            {
              "kind": "method",
              "name": "send",
              "parameters": [
                {
                  "name": "ch"
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendPending"
            },
            {
              "kind": "method",
              "name": "cancelPending"
            },
            {
              "kind": "field",
              "name": "table",
              "default": "new KeyerTable('itu')"
            },
            {
              "kind": "field",
              "name": "idle",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "pending",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "skipped",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "lastch",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "pitch",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "gain",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "rise",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "fall",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope2",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "cursor",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyStraight",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "cancel",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "oscillator",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ramp",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerPlayer",
            "module": "/src/KeyerPlayer.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerOutput",
          "declaration": {
            "name": "KeyerOutput",
            "module": "src/KeyerOutput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPaddleAdapter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPaddleAdapter",
          "members": [
            {
              "kind": "field",
              "name": "adapters",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "adapter",
              "type": {
                "text": "string"
              },
              "default": "'none'"
            },
            {
              "kind": "method",
              "name": "keyEvent",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                },
                {
                  "name": "keyer"
                }
              ]
            },
            {
              "kind": "field",
              "name": "adapterState",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterKeyLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterKeyRight",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterTable",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "adapterTables",
              "type": {
                "text": "object"
              },
              "default": "{ none: { 0:0, 1:1, 2:2, 3:3 }, ultimatic: { 0:0, 1:1, 2:6, 3:2, 4:0, 5:1, 6:6, 7:5 }, 'single lever': { 0:0, 1:1, 2:6, 3:1, 4:0, 5:1, 6:6, 7:6 } }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPaddleAdapter",
          "declaration": {
            "name": "KeyerPaddleAdapter",
            "module": "src/KeyerPaddleAdapter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPaddleNd7paProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPaddleNoneProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPaddleVk6phProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPaddleWorklet.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPaddleWorklet",
          "members": [
            {
              "kind": "method",
              "name": "setTiming"
            },
            {
              "kind": "field",
              "name": "mode"
            },
            {
              "kind": "method",
              "name": "onmessage",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onmessageerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onprocessorerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "eparent",
              "default": "eparent"
            },
            {
              "kind": "field",
              "name": "sampleRate"
            },
            {
              "kind": "field",
              "name": "onmessage"
            },
            {
              "kind": "field",
              "name": "onmessageerror"
            },
            {
              "kind": "field",
              "name": "onprocessorerror"
            }
          ],
          "superclass": {
            "name": "AudioWorkletNode",
            "module": "src/KeyerPaddleWorklet.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPaddleWorklet",
          "declaration": {
            "name": "KeyerPaddleWorklet",
            "module": "src/KeyerPaddleWorklet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerPlayer.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPlayer",
          "members": [
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ]
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ]
            },
            {
              "kind": "field",
              "name": "pitch"
            },
            {
              "kind": "field",
              "name": "gain"
            },
            {
              "kind": "field",
              "name": "rise"
            },
            {
              "kind": "field",
              "name": "fall"
            },
            {
              "kind": "field",
              "name": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2"
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20"
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20"
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "cursor"
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyStraight"
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "field",
              "name": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)"
            },
            {
              "kind": "field",
              "name": "oscillator"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'"
            },
            {
              "kind": "field",
              "name": "ramp"
            },
            {
              "kind": "field",
              "name": "volume"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPlayer",
          "declaration": {
            "name": "KeyerPlayer",
            "module": "src/KeyerPlayer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerRamp.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerRamp",
          "members": [
            {
              "kind": "field",
              "name": "ramps",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "rise",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fall",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rise2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fall2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerRamp",
          "declaration": {
            "name": "KeyerRamp",
            "module": "src/KeyerRamp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerScope.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScope",
          "members": [
            {
              "kind": "method",
              "name": "addSource",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "node"
                },
                {
                  "name": "asByte"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addChannel",
              "parameters": [
                {
                  "name": "source"
                },
                {
                  "name": "scale"
                },
                {
                  "name": "offset"
                },
                {
                  "name": "color"
                }
              ]
            },
            {
              "kind": "field",
              "name": "sources",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "source",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "field",
              "name": "nchannels",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "channels",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "channel",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "field",
              "name": "triggers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "trigger"
            },
            {
              "kind": "field",
              "name": "triggerValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "triggerChannel"
            },
            {
              "kind": "field",
              "name": "triggerChannelValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "holds",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hold"
            },
            {
              "kind": "field",
              "name": "holdValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "timeScales",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "timeScale"
            },
            {
              "kind": "field",
              "name": "timeScaleValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalScales",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "size"
            },
            {
              "kind": "method",
              "name": "enable",
              "parameters": [
                {
                  "name": "v"
                },
                {
                  "name": "canvas"
                }
              ]
            },
            {
              "kind": "field",
              "name": "running"
            },
            {
              "kind": "method",
              "name": "findTrigger"
            },
            {
              "kind": "method",
              "name": "loop",
              "parameters": [
                {
                  "name": "step"
                }
              ]
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "enabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_running",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_sources",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "sizeMin",
              "type": {
                "text": "number"
              },
              "default": "32"
            },
            {
              "kind": "field",
              "name": "sizeMax"
            },
            {
              "kind": "field",
              "name": "_size"
            },
            {
              "kind": "field",
              "name": "_triggers",
              "type": {
                "text": "object"
              },
              "default": "{ 'none': 0, '+': 1, '-': -1, '*': 2 }"
            },
            {
              "kind": "field",
              "name": "_trigger",
              "type": {
                "text": "string"
              },
              "default": "'+'"
            },
            {
              "kind": "field",
              "name": "_triggerChannel",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "preTrigger",
              "type": {
                "text": "number"
              },
              "default": "32"
            },
            {
              "kind": "field",
              "name": "_holds",
              "type": {
                "text": "object"
              },
              "default": "{ 'none': 0, '100ms': 0.1, '200ms': 0.2, '500ms': 0.5, '1s': 1, '2s': 2, '5s': 5, '10s': 10, '20s': 20, '50s': 50 }"
            },
            {
              "kind": "field",
              "name": "_hold",
              "type": {
                "text": "string"
              },
              "default": "'none'"
            },
            {
              "kind": "field",
              "name": "_timeScales",
              "type": {
                "text": "object"
              },
              "default": "{ '1µs/div': 1e-6, '2µs/div': 2e-6, '5µs/div': 5e-6, '10µs/div': 1e-5, '20µs/div': 2e-5, '50µs/div': 5e-5, '100µs/div': 1e-4, '200µs/div': 2e-4, '500µs/div': 5e-4, '1ms/div': 1e-3, '2ms/div': 2e-3, '5ms/div': 5e-3, '10ms/div': 1e-2, '20ms/div': 2e-2, '50ms/div': 5e-2, '100ms/div': 1e-1, '200ms/div': 2e-1, '500ms/div': 5e-1, '1s/div': 1e+0, '2s/div': 2e+0, '5s/div': 5e+0 }"
            },
            {
              "kind": "field",
              "name": "_timeScale",
              "type": {
                "text": "string"
              },
              "default": "'10ms/div'"
            },
            {
              "kind": "field",
              "name": "_verticalScales",
              "type": {
                "text": "object"
              },
              "default": "{ '1µFS/div': 1e-6, '2µFS/div': 2e-6, '5µFS/div': 5e-6, '10µFS/div': 1e-5, '20µFS/div': 2e-5, '50µFS/div': 5e-5, '100µFS/div': 1e-4, '200µFS/div': 2e-4, '500µFS/div': 5e-4, '1mFS/div': 1e-3, '2mFS/div': 2e-3, '5mFS/div': 5e-3, '10mFS/div': 1e-2, '20mFS/div': 2e-2, '50mFS/div': 5e-2, '100mFS/div': 1e-1, '200mFS/div': 2e-1, '500mFS/div': 5e-1, '1FS/div': 1e+0, '2FS/div': 2e+0, '5FS/div': 5e+0 }"
            },
            {
              "kind": "field",
              "name": "_channels",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "_nchannels",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScope",
          "declaration": {
            "name": "KeyerScope",
            "module": "src/KeyerScope.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerScopeChannel.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScopeChannel",
          "members": [
            {
              "kind": "method",
              "name": "createSamples"
            },
            {
              "kind": "field",
              "name": "source",
              "default": "source"
            },
            {
              "kind": "field",
              "name": "sourceValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "enabled",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalScale",
              "default": "scale"
            },
            {
              "kind": "field",
              "name": "verticalScaleValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalOffset",
              "default": "offset"
            },
            {
              "kind": "field",
              "name": "verticalOffsetValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "color",
              "default": "color"
            },
            {
              "kind": "field",
              "name": "size",
              "default": "size"
            },
            {
              "kind": "field",
              "name": "scope",
              "default": "scope"
            },
            {
              "kind": "field",
              "name": "analyser"
            },
            {
              "kind": "field",
              "name": "_samples"
            },
            {
              "kind": "field",
              "name": "captured",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScopeChannel",
          "declaration": {
            "name": "KeyerScopeChannel",
            "module": "src/KeyerScopeChannel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerScopeSource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScopeSource",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "default": "name"
            },
            {
              "kind": "field",
              "name": "node",
              "default": "node"
            },
            {
              "kind": "field",
              "name": "asByte",
              "default": "asByte"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScopeSource",
          "declaration": {
            "name": "KeyerScopeSource",
            "module": "src/KeyerScopeSource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerTable.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerTable",
          "members": [
            {
              "kind": "method",
              "name": "encode",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "decode",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "transliterate",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "ditLength",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setName",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getNames"
            },
            {
              "kind": "field",
              "name": "codes",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ 'arabic' : { \"\\u0627\" : '.-', \"\\u062f\" : '-..', \"\\u0636\" : '...-', \"\\u0643\" : '-.-', \"\\ufe80\" : '.', \"\\u0628\" : '-...', \"\\u0630\" : '--..', \"\\u0637\" : '..-', \"\\u0644\" : '.-..', \"\\u062a\" : '-', \"\\u0631\" : '.-.', \"\\u0638\" : '-.--', \"\\u0645\" : '--', \"\\u062b\" : '-.-.', \"\\u0632\" : '---.', \"\\u0639\" : '.-.-', \"\\u0646\" : '-.', \"\\u062c\": '.---', \"\\u0633\" : '...', \"\\u063a\" : '--.', \"\\u0647\" : '..-..', \"\\u062d\" : '....', \"\\u0634\" : '----', \"\\u0641\" : '..-.', \"\\u0648\" : '.--', \"\\u062e\" : '---', \"\\u0635\" : '-..-', \"\\u0642\" : '--.-', \"\\u064a\" : '..' }, 'cyrillic' : { \"\\u0410\" : '.-', \"\\u041b\" : '.-..', \"\\u0425\" : '....', \"\\u0411\" : '-...', \"\\u041c\" : '--', \"\\u0426\" : '-.-.', \"\\u0412\" : '.--', \"\\u041d\" : '-.', \"\\u0427\" : '---.', \"\\u0413\" : '--.', \"\\u041e\" : '---', \"\\u0428\" : '----', \"\\u0414\" : '-..', \"\\u041f\" : '.--.', \"\\u0429\" : '--.-', \"\\u0415\" : '.', \"\\u0420\" : '.-.', \"\\u042c\" : '-..-', \"\\u0416\" : '...-', \"\\u0421\" : '...', \"\\u042b\" : '-.--', \"\\u0417\" : '--..', \"\\u0422\" : '-', \"\\u042d\" : '..-..', \"\\u0418\" : '..', \"\\u0423\" : '..-', \"\\u042e\" : '..--', \"\\u0419\" : '.---', \"\\u0424\" : '..-.', \"\\u042f\" : '.-.-', \"\\u041a\" : '-.-' }, 'farsi' : { \"\\u0627\" : '.-', \"\\u062e\" : '-..-', \"\\u0635\" : '.-.-', \"\\u06a9\" : '-.-', \"\\u0628\" : '-...', \"\\u062f\" : '-..', \"\\u0636\" : '..-..', \"\\u06af\" : '--.-', \"\\u067e\" : '.--.', \"\\u0630\" : '...-', \"\\u0637\" : '..-', \"\\u0644\" : '.-..', \"\\u062a\" : '-', \"\\u0631\" : '.-.', \"\\u0638\" : '-.--', \"\\u0645\" : '--', \"\\u062b\" : '-.-.', \"\\u0632\" : '--..', \"\\u0639\" : '---', \"\\u0646\" : '-.', \"\\u062c\" : '.---', \"\\u0698\" : '--.', \"\\u063a\" : '..--', \"\\u0648\" : '.--', \"\\u0686\" : '---.', \"\\u0633\" : '...', \"\\u0641\" : '..-.', \"\\u0647\" : '.', \"\\u062d\" : '....', \"\\u0634\" : '----', \"\\u0642\" : '...---', \"\\u06cc\" : '..' }, 'greek' : { \"\\u0391\" : '.-', \"\\u0399\" : '..', \"\\u03a1\" : '.-.', \"\\u0392\" : '-...', \"\\u039a\" : '-.-', \"\\u03a3\" : '...', \"\\u0393\" : '--.', \"\\u039b\" : '.-..', \"\\u03a4\" : '-', \"\\u0394\" : '-..', \"\\u039c\" : '--', \"\\u03a5\" : '-.--', \"\\u0395\" : '.', \"\\u039d\" : '-.', \"\\u03a6\" : '..-.', \"\\u0396\" : '--..', \"\\u039e\" : '-..-', \"\\u03a7\" : '----', \"\\u0397\" : '....', \"\\u039f\" : '---', \"\\u03a8\" : '--.-', \"\\u0398\" : '-.-.', \"\\u03a0\" : '.--.', \"\\u03a9\" : '.--' }, 'hebrew' : { \"\\u05d0\" : '.-', \"\\u05dc\" : '.-..', \"\\u05d1\" : '-...', \"\\u05de\" : '--', \"\\u05d2\" : '--.', \"\\u05e0\" : '-.', \"\\u05d3\" : '-..', \"\\u05e1\" : '-.-.', \"\\u05d4\" : '---', \"\\u05e2\" : '.---', \"\\u05d5\" : '.', \"\\u05e4\" : '.--.', \"\\u05d6\" : '--..', \"\\u05e6\" : '.--', \"\\u05d7\" : '....', \"\\u05e7\" : '--.-', \"\\u05d8\" : '..-', \"\\u05e8\" : '.-.', \"\\u05d9\" : '..', \"\\u05e9\" : '...', \"\\u05db\" : '-.-', \"\\u05ea\" : '-' }, 'itu' : { '!' : '-.-.--', '\"' : '.-..-.', '$' : '...-..-', '&' : '.-...', \"'\" : '.----.', '(' : '-.--.', ')' : '-.--.-', '+' : '.-.-.', ',' : '--..--', '-' : '-....-', '.' : '.-.-.-', '/' : '-..-.', '0' : '-----', '1': '.----', '2' : '..---', '3' : '...--', '4' : '....-', '5' : '.....', '6' : '-....', '7' : '--...', '8' : '---..', '9' : '----.', ':' : '---...', ';' : '-.-.-.', '=' : '-...-', '?' : '..--..', '@' : '.--.-.', 'A' : '.-', 'B' : '-...', 'C' : '-.-.', 'D' : '-..', 'E' : '.', 'F' : '..-.', 'G' : '--.', 'H' : '....', 'I' : '..', 'J' : '.---', 'K' : '-.-', 'L' : '.-..', 'M' : '--', 'N' : '-.', 'O' : '---', 'P' : '.--.', 'Q' : '--.-', 'R' : '.-.', 'S' : '...', 'T' : '-', 'U' : '..-', 'V' : '...-', 'W' : '.--', 'X' : '-..-', 'Y' : '-.--', 'Z' : '--..', '_' : '..--.-', '*' : '...-.-', // prosigns assigned to ascii punctuation 'À' : '.--.-', 'Ä' : '.-.-', 'Ç' : '----', 'È' : '..-..', 'Ñ' : '--.--', 'Ö' : '---.', 'Ü' : '..--', // latin extensions }, // rather than get all creative, though I'm not sure where the creation came from, copy the fldigi code table 'fldigi' : { '!' : '-.-.--', '$' : '...-..-', '&' : '..-.-', \"'\" : '.----.', '(' : '-.--.', ')' : '-.--.-', '+' : '.-.-.', ',' : '--..--', '-' : '-....-', '.' : '.-.-.-', '/' : '-..-.', '0' : '-----', '1' : '.----', '2' : '..---', '3' : '...--', '4' : '....-', '5' : '.....', '6' : '-....', '7' : '--...', '8' : '---..', '9' : '----.', ':' : '---...', ';' : '-.-.-.', '=' : '-...-', '?' : '..--..', '@' : '.--.-.', 'A' : '.-', 'B' : '-...', 'C' : '-.-.', 'D' : '-..', 'E' : '.', 'F' : '..-.', 'G' : '--.', 'H' : '....', 'I' : '..', 'J' : '.---', 'K' : '-.-', 'L' : '.-..', 'M' : '--', 'N' : '-.', 'O' : '---', 'P' : '.--.', 'Q' : '--.-', 'R' : '.-.', 'S' : '...', 'T' : '-', 'U' : '..-', 'V' : '...-', 'W' : '.--', 'X' : '-..-', 'Y' : '-.--', 'Z' : '--..', '_' : '..--.-', '\\\\' : '.-..-.', '~' : '.-.-', '%' : '.-...', '>' : '...-.-', // '<' : '-.--.', this conflicts with '(' '}' : '....--', '{' : '...-.', }, 'wabun' : { \"\\u30a2\" : '--.--', \"\\u30ab\" : '.-..', \"\\u30b5\" : '-.-.-', \"\\u30bf\" : '-.', \"\\u30ca\" : '.-.', \"\\u30cf\" : '-...', \"\\u30de\" : '-..-', \"\\u30e4\" : '.--', \"\\u30e9\" : '...', \"\\u30ef\" : '-.-', \"\\u25cc\" : '..', \"\\u30a4\" : '.-', \"\\u30ad\" : '-.-..', \"\\u30b7\" : '--.-.', \"\\u30c1\" : '..-.', \"\\u30cb\" : '-.-.', \"\\u30d2\" : '--..-', \"\\u30df\" : '..-.-', \"\\u30ea\" : '--.', \"\\u30f0\" : '.-..-', \"\\u30a6\" : '..-', \"\\u30af\" : '...-', \"\\u30b9\" : '---.-', \"\\u30c4\" : '.--.', \"\\u30cc\" : '....', \"\\u30d5\" : '--..', \"\\u30e0\" : '-', \"\\u30e6\" : '-..--', \"\\u30eb\" : '-.--.', \"\\u30f3\" : '.-.-.', \"\\u30a8\" : '-.---', \"\\u30b1\" : '-.--', \"\\u30bb\" : '.---.', \"\\u30c6\" : '.-.--', \"\\u30cd\" : '--.-', \"\\u30d8\" : '.', \"\\u30e1\" : '-...-', \"\\u30ec\" : '---', \"\\u30f1\" : '.--..', \"\\u3001\" : '.-.-.-', \"\\u30aa\" : '.-...', \"\\u30b3\" : '----', \"\\u30bd\" : '---.', \"\\u30c8\" : '..-..', \"\\u30ce\" : '..--', \"\\u30db\" : '-..', \"\\u30e2\" : '-..-.', \"\\u30e8\" : '--', \"\\u30ed\" : '.-.-', \"\\u30f2\" : '.---', \"\\u3002\": '.-.-..' } // duplicate key \"\\u25cc\" : '.--.-', \"\\u25cc\" : '..--.', }"
            },
            {
              "kind": "field",
              "name": "transliterations",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{ 'arabic' : { \"\\u0627\" : 'A', \"\\u062f\" : 'D', \"\\u0636\" : 'V', \"\\u0643\" : 'K', \"\\ufe80\" : 'E', \"\\u0628\" : 'B', \"\\u0630\" : 'Z', \"\\u0637\" : 'U', \"\\u0644\" : 'L', \"\\u062a\" : 'T', \"\\u0631\" : 'R', \"\\u0638\" : 'Y', \"\\u0645\" : 'M', \"\\u062b\" : 'C', \"\\u0632\" : 'Z', \"\\u0639\" : 'Ä', \"\\u0646\" : 'N', \"\\u062c\" : 'J', \"\\u0633\" : 'S', \"\\u063a\" : 'G', \"\\u0647\" : 'É', \"\\u062d\" : 'H', \"\\u0634\" : 'SH', \"\\u0641\" : 'F', \"\\u0648\" : 'W', \"\\u062e\" : 'O', \"\\u0635\" : 'X', \"\\u0642\" : 'Q', \"\\u064a\" : 'I' }, 'cyrillic' : { \"\\u0410\" : 'A', \"\\u041b\" : 'L', \"\\u0425\" : 'H', \"\\u0411\" : 'B', \"\\u041c\" : 'M', \"\\u0426\" : 'C', \"\\u0412\" : 'W', \"\\u041d\" : 'N', \"\\u0427\" : 'Ö', \"\\u0413\" : 'G', \"\\u041e\" : 'O', \"\\u0428\" : 'CH', \"\\u0414\" : 'D', \"\\u041f\" : 'P', \"\\u0429\" : 'Q', \"\\u0415\" : 'E', \"\\u0420\" : 'R', \"\\u042c\" : 'X', \"\\u0416\" : 'V', \"\\u0421\" : 'S', \"\\u042b\" : 'Y', \"\\u0417\" : 'Z', \"\\u0422\" : 'T', \"\\u042d\" : 'É', \"\\u0418\" : 'I', \"\\u0423\" : 'U', \"\\u042e\" : 'Ü', \"\\u0419\" : 'J', \"\\u0424\" : 'F', \"\\u042f\" : 'Ä', \"\\u041a\" : 'K' }, 'farsi' : { \"\\u0627\" : 'A', \"\\u062e\" : 'X', \"\\u0635\" : 'Ä', \"\\u06a9\" : 'K', \"\\u0628\" : 'B', \"\\u062f\" : 'D', \"\\u0636\" : 'É', \"\\u06af\" : 'Q', \"\\u067e\" : 'P', \"\\u0630\" : 'V', \"\\u0637\" : 'U', \"\\u0644\" : 'L', \"\\u062a\" : 'T', \"\\u0631\" : 'R', \"\\u0638\" : 'Y', \"\\u0645\" : 'M', \"\\u062b\" : 'C', \"\\u0632\" : 'Z', \"\\u0639\" : 'O', \"\\u0646\" : 'N', \"\\u062c\" : 'J', \"\\u0698\" : 'G', \"\\u063a\" : 'Ü', \"\\u0648\" : 'W', \"\\u0686\" : 'Ö', \"\\u0633\" : 'S', \"\\u0641\" : 'F', \"\\u0647\" : 'E', \"\\u062d\" : 'H', \"\\u0634\" : 'Š', \"\\u0642\" : '?', \"\\u06cc\" : 'I' }, 'greek' : { \"\\u0391\" : 'A', \"\\u0399\" : 'I', \"\\u03a1\" : 'R', \"\\u0392\" : 'B', \"\\u039a\" : 'K', \"\\u03a3\" : 'S', \"\\u0393\" : 'G', \"\\u039b\" : 'L', \"\\u03a4\" : 'T', \"\\u0394\" : 'D', \"\\u039c\" : 'M', \"\\u03a5\" : 'Y', \"\\u0395\" : 'E', \"\\u039d\" : 'N', \"\\u03a6\" : 'F', \"\\u0396\" : 'Z', \"\\u039e\" : 'X', \"\\u03a7\" : 'CH', \"\\u0397\" : 'H', \"\\u039f\" : 'O', \"\\u03a8\" : 'Q', \"\\u0398\" : 'C', \"\\u03a0\" : 'P', \"\\u03a9\" : 'W' }, 'hebrew' : { \"\\u05d0\" : 'A', \"\\u05dc\" : 'L', \"\\u05d1\" : 'B', \"\\u05de\" : 'M', \"\\u05d2\" : 'G', \"\\u05e0\" : 'N', \"\\u05d3\" : 'D', \"\\u05e1\" : 'C', \"\\u05d4\" : 'O', \"\\u05e2\" : 'J', \"\\u05d5\" : 'E', \"\\u05e4\" : 'P', \"\\u05d6\" : 'Z', \"\\u05e6\" : 'W', \"\\u05d7\" : 'H', \"\\u05e7\" : 'Q', \"\\u05d8\" : 'U', \"\\u05e8\" : 'R', \"\\u05d9\" : 'I', \"\\u05e9\" : 'S', \"\\u05db\" : 'K', \"\\u05ea\" : 'T' }, 'wabun' : { \"\\u30a2\" : 'a', \"\\u30ab\" : 'ka', \"\\u30b5\" : 'sa', \"\\u30bf\" : 'ta', \"\\u30ca\" : 'na', \"\\u30cf\" : 'ha', \"\\u30de\" : 'ma', \"\\u30e4\" : 'ya', \"\\u30e9\" : 'ra', \"\\u30a4\" : 'i', \"\\u30ad\" : 'ki', \"\\u30b7\" : 'shi', \"\\u30c1\" : 'chi', \"\\u30cb\" : 'ni', \"\\u30d2\" : 'hi', \"\\u30df\" : 'mi', \"\\u30ea\" : 'ri', \"\\u30f0\" : 'wi', \"\\u30a6\" : 'u', \"\\u30af\" : 'ku', \"\\u30b9\" : 'su', \"\\u30c4\" : 'tsu', \"\\u30cc\" : 'nu', \"\\u30d5\" : 'fu', \"\\u30e0\" : 'mu', \"\\u30e6\" : 'yu', \"\\u30eb\" : 'ru', \"\\u30f3\" : 'n', \"\\u30a8\" : 'e', \"\\u30b1\" : 'ke', \"\\u30bb\" : 'se', \"\\u30c6\" : 'te', \"\\u30cd\" : 'ne', \"\\u30d8\" : 'he', \"\\u30e1\" : 'me', \"\\u30ec\" : 're', \"\\u30f1\" : 'we', \"\\u30aa\" : 'o', \"\\u30b3\" : 'ko', \"\\u30bd\" : 'so', \"\\u30c8\" : 'to', \"\\u30ce\" : 'no', \"\\u30db\" : 'ho', \"\\u30e2\" : 'mo', \"\\u30e8\" : 'yo', \"\\u30ed\" : 'ro', \"\\u30f2\" : 'wo', // these end up as duplicate keys // \"\\u25cc\" : 'Dakuten', \"\\u25cc\" : 'Handakuten', \"\\u25cc\" : 'Long vowel', \"\\u3001\" : 'Comma', \"\\u3002\" : 'Full stop' } }"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "code",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "trans",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "invert",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dits",
              "type": {
                "text": "null"
              },
              "default": "null"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerTable",
          "declaration": {
            "name": "KeyerTable",
            "module": "src/KeyerTable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/KeyerWindow.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerWindow",
          "members": [
            {
              "kind": "field",
              "name": "windows",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "window",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "n"
                },
                {
                  "name": "i"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "window2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "n"
                },
                {
                  "name": "i"
                },
                {
                  "name": "args"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerWindow",
          "declaration": {
            "name": "KeyerWindow",
            "module": "src/KeyerWindow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/keyer-js.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerJs",
          "members": [
            {
              "kind": "field",
              "name": "_running",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "keyer",
              "type": {
                "text": "Keyer | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "keyboardFocused",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "sections",
              "type": {
                "text": "string[]"
              },
              "attribute": "sections"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "string[]"
              },
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "running",
              "attribute": "running"
            },
            {
              "kind": "field",
              "name": "speed",
              "attribute": "speed"
            },
            {
              "kind": "field",
              "name": "gain",
              "attribute": "gain"
            },
            {
              "kind": "field",
              "name": "pitch",
              "attribute": "pitch"
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "attribute": "farnsworth"
            },
            {
              "kind": "field",
              "name": "weight",
              "attribute": "weight"
            },
            {
              "kind": "field",
              "name": "ratio",
              "attribute": "ratio"
            },
            {
              "kind": "field",
              "name": "compensation",
              "attribute": "compensation"
            },
            {
              "kind": "field",
              "name": "rise",
              "attribute": "rise"
            },
            {
              "kind": "field",
              "name": "fall",
              "attribute": "fall"
            },
            {
              "kind": "field",
              "name": "envelope",
              "attribute": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2",
              "attribute": "envelope2"
            },
            {
              "kind": "field",
              "name": "paddleKeyers",
              "readonly": true,
              "attribute": "paddleKeyers"
            },
            {
              "kind": "field",
              "name": "paddleKeyer",
              "attribute": "paddleKeyer"
            },
            {
              "kind": "field",
              "name": "paddleSwapped",
              "attribute": "paddleSwapped"
            },
            {
              "kind": "field",
              "name": "straightKey",
              "attribute": "straightKey"
            },
            {
              "kind": "field",
              "name": "leftPaddleKey",
              "attribute": "leftPaddleKey"
            },
            {
              "kind": "field",
              "name": "rightPaddleKey",
              "attribute": "rightPaddleKey"
            },
            {
              "kind": "field",
              "name": "straightMidi",
              "attribute": "straightMidi"
            },
            {
              "kind": "field",
              "name": "leftPaddleMidi",
              "attribute": "leftPaddleMidi"
            },
            {
              "kind": "field",
              "name": "rightPaddleMidi",
              "attribute": "rightPaddleMidi"
            },
            {
              "kind": "field",
              "name": "requestedSampleRate",
              "type": {
                "text": "string"
              },
              "default": "'48000'",
              "attribute": "requestedSampleRate"
            },
            {
              "kind": "field",
              "name": "scopeRunning",
              "attribute": "scopeRunning"
            },
            {
              "kind": "field",
              "name": "scopeTriggers",
              "readonly": true,
              "attribute": "scopeTriggers"
            },
            {
              "kind": "field",
              "name": "scopeTrigger",
              "attribute": "scopeTrigger"
            },
            {
              "kind": "field",
              "name": "scopeTriggerChannel",
              "attribute": "scopeTriggerChannel"
            },
            {
              "kind": "field",
              "name": "scopeChannels",
              "readonly": true,
              "attribute": "scopeChannels"
            },
            {
              "kind": "field",
              "name": "scopeHold",
              "attribute": "scopeHold"
            },
            {
              "kind": "field",
              "name": "scopeHolds",
              "readonly": true,
              "attribute": "scopeHolds"
            },
            {
              "kind": "field",
              "name": "scopeTimeScale",
              "attribute": "scopeTimeScale"
            },
            {
              "kind": "field",
              "name": "scopeTimeScales",
              "readonly": true,
              "attribute": "scopeTimeScales"
            },
            {
              "kind": "field",
              "name": "scopeSources",
              "readonly": true,
              "attribute": "scopeSources"
            },
            {
              "kind": "field",
              "name": "scopeSource1",
              "attribute": "scopeSource1"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale1",
              "attribute": "scopeVerticalScale1"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset1",
              "attribute": "scopeVerticalOffset1"
            },
            {
              "kind": "field",
              "name": "scopeSource2",
              "attribute": "scopeSource2"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale2",
              "attribute": "scopeVerticalScale2"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset2",
              "attribute": "scopeVerticalOffset2"
            },
            {
              "kind": "field",
              "name": "scopeSource3",
              "attribute": "scopeSource3"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale3",
              "attribute": "scopeVerticalScale3"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset3",
              "attribute": "scopeVerticalOffset3"
            },
            {
              "kind": "field",
              "name": "scopeSource4",
              "attribute": "scopeSource4"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale4",
              "attribute": "scopeVerticalScale4"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset4",
              "attribute": "scopeVerticalOffset4"
            },
            {
              "kind": "field",
              "name": "state",
              "readonly": true,
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "attribute": "sampleRate"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "attribute": "currentTime"
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "attribute": "baseLatency"
            },
            {
              "kind": "field",
              "name": "midiAvailable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "midiAvailable"
            },
            {
              "kind": "field",
              "name": "shiftKeys",
              "type": {
                "text": "array"
              },
              "default": "[ 'None', 'ShiftLeft', 'ControlLeft', 'AltLeft', 'AltRight', 'ControlRight', 'ShiftRight', ]",
              "attribute": "shiftKeys"
            },
            {
              "kind": "field",
              "name": "midiNotes",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "attribute": "midiNotes"
            },
            {
              "kind": "field",
              "name": "sampleRates",
              "type": {
                "text": "array"
              },
              "default": "[ '8000', '32000', '44100', '48000', '96000', '192000', '384000', ]",
              "attribute": "sampleRates"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScales",
              "readonly": true,
              "attribute": "scopeVerticalScales"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "HTMLTemplateResult"
              },
              "default": "html``",
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "finished",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "attribute": "finished"
            },
            {
              "kind": "field",
              "name": "pending",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "attribute": "pending"
            },
            {
              "kind": "method",
              "name": "setScopeChannel",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "channel",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "number | string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getScopeChannel",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "channel",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "start"
            },
            {
              "kind": "method",
              "name": "onFocus"
            },
            {
              "kind": "method",
              "name": "onBlur"
            },
            {
              "kind": "method",
              "name": "processFinished"
            },
            {
              "kind": "method",
              "name": "blinkenCursen"
            },
            {
              "kind": "method",
              "name": "updateContent"
            },
            {
              "kind": "method",
              "name": "appendFinished",
              "parameters": [
                {
                  "name": "tag",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onkeyed",
              "parameters": [
                {
                  "name": "ltr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "ttyKeydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear"
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "method",
              "name": "onsent",
              "parameters": [
                {
                  "name": "ltr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onunsent",
              "parameters": [
                {
                  "name": "ltr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onskipped",
              "parameters": [
                {
                  "name": "ltr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mouseDown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mouseUp",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "touchDown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "touchUp",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSetDefaultValue",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "forceDefault",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSetDefaultValues",
              "parameters": [
                {
                  "name": "forceDefault",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlUpdate",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldv",
                  "type": {
                    "text": "number | string | boolean"
                  }
                },
                {
                  "name": "newv",
                  "type": {
                    "text": "number | string | boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlToggle",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSelect",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "scopeResize"
            },
            {
              "kind": "method",
              "name": "controlRender",
              "return": {
                "type": {
                  "text": "HTMLTemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sectionIsShown",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sectionClasses",
              "parameters": [
                {
                  "name": "control",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "sections",
              "type": {
                "text": "string[]"
              },
              "fieldName": "sections"
            },
            {
              "name": "selected",
              "type": {
                "text": "string[]"
              },
              "fieldName": "selected"
            },
            {
              "name": "running",
              "fieldName": "running"
            },
            {
              "name": "speed",
              "fieldName": "speed"
            },
            {
              "name": "gain",
              "fieldName": "gain"
            },
            {
              "name": "pitch",
              "fieldName": "pitch"
            },
            {
              "name": "farnsworth",
              "fieldName": "farnsworth"
            },
            {
              "name": "weight",
              "fieldName": "weight"
            },
            {
              "name": "ratio",
              "fieldName": "ratio"
            },
            {
              "name": "compensation",
              "fieldName": "compensation"
            },
            {
              "name": "rise",
              "fieldName": "rise"
            },
            {
              "name": "fall",
              "fieldName": "fall"
            },
            {
              "name": "envelope",
              "fieldName": "envelope"
            },
            {
              "name": "envelope2",
              "fieldName": "envelope2"
            },
            {
              "name": "paddleKeyers",
              "readonly": true,
              "fieldName": "paddleKeyers"
            },
            {
              "name": "paddleKeyer",
              "fieldName": "paddleKeyer"
            },
            {
              "name": "paddleSwapped",
              "fieldName": "paddleSwapped"
            },
            {
              "name": "straightKey",
              "fieldName": "straightKey"
            },
            {
              "name": "leftPaddleKey",
              "fieldName": "leftPaddleKey"
            },
            {
              "name": "rightPaddleKey",
              "fieldName": "rightPaddleKey"
            },
            {
              "name": "straightMidi",
              "fieldName": "straightMidi"
            },
            {
              "name": "leftPaddleMidi",
              "fieldName": "leftPaddleMidi"
            },
            {
              "name": "rightPaddleMidi",
              "fieldName": "rightPaddleMidi"
            },
            {
              "name": "requestedSampleRate",
              "type": {
                "text": "string"
              },
              "default": "'48000'",
              "fieldName": "requestedSampleRate"
            },
            {
              "name": "scopeRunning",
              "fieldName": "scopeRunning"
            },
            {
              "name": "scopeTriggers",
              "readonly": true,
              "fieldName": "scopeTriggers"
            },
            {
              "name": "scopeTrigger",
              "fieldName": "scopeTrigger"
            },
            {
              "name": "scopeTriggerChannel",
              "fieldName": "scopeTriggerChannel"
            },
            {
              "name": "scopeChannels",
              "readonly": true,
              "fieldName": "scopeChannels"
            },
            {
              "name": "scopeHold",
              "fieldName": "scopeHold"
            },
            {
              "name": "scopeHolds",
              "readonly": true,
              "fieldName": "scopeHolds"
            },
            {
              "name": "scopeTimeScale",
              "fieldName": "scopeTimeScale"
            },
            {
              "name": "scopeTimeScales",
              "readonly": true,
              "fieldName": "scopeTimeScales"
            },
            {
              "name": "scopeSources",
              "readonly": true,
              "fieldName": "scopeSources"
            },
            {
              "name": "scopeSource1",
              "fieldName": "scopeSource1"
            },
            {
              "name": "scopeVerticalScale1",
              "fieldName": "scopeVerticalScale1"
            },
            {
              "name": "scopeVerticalOffset1",
              "fieldName": "scopeVerticalOffset1"
            },
            {
              "name": "scopeSource2",
              "fieldName": "scopeSource2"
            },
            {
              "name": "scopeVerticalScale2",
              "fieldName": "scopeVerticalScale2"
            },
            {
              "name": "scopeVerticalOffset2",
              "fieldName": "scopeVerticalOffset2"
            },
            {
              "name": "scopeSource3",
              "fieldName": "scopeSource3"
            },
            {
              "name": "scopeVerticalScale3",
              "fieldName": "scopeVerticalScale3"
            },
            {
              "name": "scopeVerticalOffset3",
              "fieldName": "scopeVerticalOffset3"
            },
            {
              "name": "scopeSource4",
              "fieldName": "scopeSource4"
            },
            {
              "name": "scopeVerticalScale4",
              "fieldName": "scopeVerticalScale4"
            },
            {
              "name": "scopeVerticalOffset4",
              "fieldName": "scopeVerticalOffset4"
            },
            {
              "name": "state",
              "readonly": true,
              "fieldName": "state"
            },
            {
              "name": "sampleRate",
              "readonly": true,
              "fieldName": "sampleRate"
            },
            {
              "name": "currentTime",
              "readonly": true,
              "fieldName": "currentTime"
            },
            {
              "name": "baseLatency",
              "readonly": true,
              "fieldName": "baseLatency"
            },
            {
              "name": "midiAvailable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "midiAvailable"
            },
            {
              "name": "shiftKeys",
              "type": {
                "text": "array"
              },
              "default": "[ 'None', 'ShiftLeft', 'ControlLeft', 'AltLeft', 'AltRight', 'ControlRight', 'ShiftRight', ]",
              "fieldName": "shiftKeys"
            },
            {
              "name": "midiNotes",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "fieldName": "midiNotes"
            },
            {
              "name": "sampleRates",
              "type": {
                "text": "array"
              },
              "default": "[ '8000', '32000', '44100', '48000', '96000', '192000', '384000', ]",
              "fieldName": "sampleRates"
            },
            {
              "name": "scopeVerticalScales",
              "readonly": true,
              "fieldName": "scopeVerticalScales"
            },
            {
              "name": "content",
              "type": {
                "text": "HTMLTemplateResult"
              },
              "default": "html``",
              "fieldName": "content"
            },
            {
              "name": "finished",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "fieldName": "finished"
            },
            {
              "name": "pending",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "pending"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit-element"
          },
          "tagName": "keyer-js",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerJs",
          "declaration": {
            "name": "KeyerJs",
            "module": "src/keyer-js.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "keyer-js",
          "declaration": {
            "name": "KeyerJs",
            "module": "src/keyer-js.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/keyer-logo.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "keyerLogo",
          "default": "html` <svg width=\"512px\" height=\"128px\" viewBox=\"0 192 512 128\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g id=\"Page-1\" stroke=\"#1d62a7\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\"> <line x1=\"384\" y1=\"224\" x2=\"448\" y2=\"224\" id=\"knob\"></line> <line x1=\"64\" y1=\"288\" x2=\"320\" y2=\"288\" id=\"base\" ></line> <polyline points=\"64,224 320,224 371.2,274 422.4,274\" id=\"key\"></polyline> <ellipse cx=\"148.5\" cy=\"224\" rx=\"16\" ry=\"16\" fill=\"#1d62a7\" stroke=\"#ffffff\" stroke-width=\"1\" id=\"hinge\"></ellipse> </g> </svg> `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyerLogo",
          "declaration": {
            "name": "keyerLogo",
            "module": "src/keyer-logo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/keyer-js.stories.js",
      "declarations": [
        {
          "kind": "function",
          "name": "App"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/keyer-js.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "stories/keyer-js.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/keyer-js.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "App"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/keyer-js.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "stories/keyer-js.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/dist/2Au7o-sz.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "variable",
          "name": "s",
          "default": "new AudioContext({ sampleRate: parseInt(this.requestedSampleRate, 10) })"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "s",
          "declaration": {
            "name": "e",
            "module": "out-tsc/dist/2Au7o-sz.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "s",
          "declaration": {
            "name": "e",
            "module": "out-tsc/dist/2Au7o-sz.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/dist/C0jeKz4t.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t"
        },
        {
          "kind": "class",
          "description": "",
          "name": "anonymous_3",
          "superclass": {
            "name": "t",
            "module": "out-tsc/dist/C0jeKz4t.js"
          },
          "tagName": "e",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "e"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "out-tsc/dist/C0jeKz4t.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "out-tsc/dist/C0jeKz4t.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "out-tsc/dist/C0jeKz4t.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "anonymous_3",
            "module": "out-tsc/dist/C0jeKz4t.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/dist/C1ySWGME.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "m",
          "members": [
            {
              "kind": "field",
              "name": "controls",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getControl",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "running"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "state",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "midiAvailable",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "midiNotes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "pitch"
            },
            {
              "kind": "field",
              "name": "gain"
            },
            {
              "kind": "field",
              "name": "speed"
            },
            {
              "kind": "field",
              "name": "weight"
            },
            {
              "kind": "field",
              "name": "ratio"
            },
            {
              "kind": "field",
              "name": "compensation"
            },
            {
              "kind": "field",
              "name": "rise"
            },
            {
              "kind": "field",
              "name": "fall"
            },
            {
              "kind": "field",
              "name": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2"
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "paddleSwapped"
            },
            {
              "kind": "field",
              "name": "paddleKeyers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "paddleKeyer"
            },
            {
              "kind": "field",
              "name": "straightKey"
            },
            {
              "kind": "field",
              "name": "leftPaddleKey"
            },
            {
              "kind": "field",
              "name": "rightPaddleKey"
            },
            {
              "kind": "field",
              "name": "straightMidi"
            },
            {
              "kind": "field",
              "name": "leftPaddleMidi"
            },
            {
              "kind": "field",
              "name": "rightPaddleMidi"
            },
            {
              "kind": "field",
              "name": "inputPitch"
            },
            {
              "kind": "field",
              "name": "inputGain"
            },
            {
              "kind": "field",
              "name": "inputSpeed"
            },
            {
              "kind": "field",
              "name": "inputWeight"
            },
            {
              "kind": "field",
              "name": "inputRatio"
            },
            {
              "kind": "field",
              "name": "inputCompensation"
            },
            {
              "kind": "field",
              "name": "inputRise"
            },
            {
              "kind": "field",
              "name": "inputFall"
            },
            {
              "kind": "field",
              "name": "inputEnvelope"
            },
            {
              "kind": "field",
              "name": "inputEnvelope2"
            },
            {
              "kind": "field",
              "name": "scopeRunning"
            },
            {
              "kind": "field",
              "name": "scopeTimeScale"
            },
            {
              "kind": "field",
              "name": "scopeTimeScales",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopeTriggers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopeTrigger"
            },
            {
              "kind": "field",
              "name": "scopeChannels",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopeTriggerChannel"
            },
            {
              "kind": "field",
              "name": "scopeHolds",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopeHold"
            },
            {
              "kind": "field",
              "name": "scopeSources",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopeVerticalScales",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setScopeChannel",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                },
                {
                  "name": "s"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getScopeChannel",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "field",
              "name": "scopeSource1"
            },
            {
              "kind": "field",
              "name": "scopeSource2"
            },
            {
              "kind": "field",
              "name": "scopeSource3"
            },
            {
              "kind": "field",
              "name": "scopeSource4"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale1"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale2"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale3"
            },
            {
              "kind": "field",
              "name": "scopeVerticalScale4"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset1"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset2"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset3"
            },
            {
              "kind": "field",
              "name": "scopeVerticalOffset4"
            },
            {
              "kind": "method",
              "name": "start"
            },
            {
              "kind": "method",
              "name": "validate"
            },
            {
              "kind": "method",
              "name": "onfocus"
            },
            {
              "kind": "method",
              "name": "onblur"
            },
            {
              "kind": "method",
              "name": "processFinished"
            },
            {
              "kind": "method",
              "name": "blinkenCursen"
            },
            {
              "kind": "method",
              "name": "updateContent"
            },
            {
              "kind": "method",
              "name": "appendFinished",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onkeyed",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "ttyKeydown",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear"
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "method",
              "name": "onsent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onunsent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onskipped",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSetDefaultValue",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSetDefaultValues",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlUpdate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                },
                {
                  "name": "s"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlToggle",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlSelect",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "scopeResize"
            },
            {
              "kind": "method",
              "name": "displayRender",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "controlRender",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyer",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "displayAbout",
              "type": {
                "text": "boolean"
              },
              "default": "!1"
            },
            {
              "kind": "field",
              "name": "displayLicense",
              "type": {
                "text": "boolean"
              },
              "default": "!1"
            },
            {
              "kind": "field",
              "name": "displayColophon",
              "type": {
                "text": "boolean"
              },
              "default": "!1"
            }
          ],
          "superclass": {
            "name": "I",
            "module": "out-tsc/dist/C1ySWGME.js"
          },
          "tagName": "keyer-js",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "keyer-js",
          "declaration": {
            "name": "m",
            "module": "out-tsc/dist/C1ySWGME.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/dist/sw.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/dist/workbox-36c6ae8a.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/Keyer.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Keyer",
          "members": [
            {
              "kind": "field",
              "name": "output",
              "default": "new KeyerOutput(this.context)"
            },
            {
              "kind": "field",
              "name": "outputDecoder",
              "default": "new KeyerDecode(this.context)"
            },
            {
              "kind": "field",
              "name": "input",
              "default": "new KeyerInput(this.context)"
            },
            {
              "kind": "field",
              "name": "inputDecoder",
              "default": "new KeyerDecode(this.context)"
            },
            {
              "kind": "field",
              "name": "midiSource",
              "default": "new KeyerMidiSource(this.context)"
            },
            {
              "kind": "field",
              "name": "microphone",
              "default": "new KeyerMicrophone(this.context)"
            },
            {
              "kind": "field",
              "name": "scope",
              "default": "new KeyerScope(this.context)"
            },
            {
              "kind": "field",
              "name": "table"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Keyer",
          "declaration": {
            "name": "Keyer",
            "module": "out-tsc/src/Keyer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerASKProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerASKWorklet.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerASKWorklet",
          "members": [
            {
              "kind": "method",
              "name": "onmessage",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onmessageerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onprocessorerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_update",
              "parameters": [
                {
                  "name": "prop"
                },
                {
                  "name": "val"
                },
                {
                  "name": "riseChanges"
                },
                {
                  "name": "fallChanges"
                }
              ]
            },
            {
              "kind": "field",
              "name": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2"
            },
            {
              "kind": "field",
              "name": "rise"
            },
            {
              "kind": "field",
              "name": "fall"
            },
            {
              "kind": "field",
              "name": "ramps",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "eparent",
              "default": "eparent"
            },
            {
              "kind": "field",
              "name": "sampleRate"
            },
            {
              "kind": "field",
              "name": "onmessage"
            },
            {
              "kind": "field",
              "name": "onmessageerror"
            },
            {
              "kind": "field",
              "name": "onprocessorerror"
            },
            {
              "kind": "field",
              "name": "_envelope",
              "type": {
                "text": "string"
              },
              "default": "'hann'"
            },
            {
              "kind": "field",
              "name": "_envelope2",
              "type": {
                "text": "string"
              },
              "default": "'rectangular'"
            },
            {
              "kind": "field",
              "name": "_rise",
              "type": {
                "text": "number"
              },
              "default": "4"
            },
            {
              "kind": "field",
              "name": "_ramps"
            }
          ],
          "superclass": {
            "name": "AudioWorkletNode",
            "module": "out-tsc/src/KeyerASKWorklet.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerASKWorklet",
          "declaration": {
            "name": "KeyerASKWorklet",
            "module": "out-tsc/src/KeyerASKWorklet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerDecode.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDecode",
          "members": [
            {
              "kind": "method",
              "name": "elementTimeoutFun"
            },
            {
              "kind": "method",
              "name": "onelement",
              "parameters": [
                {
                  "name": "elt"
                },
                {
                  "name": "timeEnded"
                }
              ]
            },
            {
              "kind": "field",
              "name": "table",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "elements",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "elementTimeout",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "configure",
              "parameters": [
                {
                  "name": "wpm"
                },
                {
                  "name": "word"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "detimeProcess",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "ontransition",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "wpm",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "word",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "estimate",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nDit",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nDah",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIes",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIls",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "field",
              "name": "nIws",
              "type": {
                "text": "number"
              },
              "default": "1",
              "inheritedFrom": {
                "name": "KeyerDetime",
                "module": "out-tsc/src/KeyerDetime.js"
              }
            },
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "scriptNode",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onaudioprocess",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerDetime",
            "module": "/out-tsc/src/KeyerDetime.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDecode",
          "declaration": {
            "name": "KeyerDecode",
            "module": "out-tsc/src/KeyerDecode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerDetime.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDetime",
          "members": [
            {
              "kind": "method",
              "name": "configure",
              "parameters": [
                {
                  "name": "wpm"
                },
                {
                  "name": "word"
                }
              ]
            },
            {
              "kind": "method",
              "name": "detimeProcess",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "ontransition",
              "parameters": [
                {
                  "name": "onoff"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "field",
              "name": "wpm",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "word",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "estimate",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "frame",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "nDit",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nDah",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIes",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIls",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "nIws",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "scriptNode",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "onaudioprocess",
              "inheritedFrom": {
                "name": "KeyerDetone",
                "module": "out-tsc/src/KeyerDetone.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerDetone",
            "module": "/out-tsc/src/KeyerDetone.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDetime",
          "declaration": {
            "name": "KeyerDetime",
            "module": "out-tsc/src/KeyerDetime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerDetone.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerDetone",
          "members": [
            {
              "kind": "method",
              "name": "setCenterAndBandwidth",
              "parameters": [
                {
                  "name": "center"
                },
                {
                  "name": "bandwidth"
                }
              ]
            },
            {
              "kind": "method",
              "name": "detoneProcess",
              "parameters": [
                {
                  "name": "x"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitTransition",
              "parameters": [
                {
                  "name": "transition"
                },
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onAudioProcess",
              "parameters": [
                {
                  "name": "audioProcessingEvent"
                }
              ]
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "node"
                }
              ]
            },
            {
              "kind": "field",
              "name": "target",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onchangepitch",
              "parameters": [
                {
                  "name": "pitch"
                }
              ]
            },
            {
              "kind": "field",
              "name": "scriptNode"
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "number"
              },
              "default": "600"
            },
            {
              "kind": "field",
              "name": "bandwidth",
              "type": {
                "text": "number"
              },
              "default": "100"
            },
            {
              "kind": "field",
              "name": "coeff",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "s",
              "default": "new Float32Array(4)"
            },
            {
              "kind": "field",
              "name": "block_size",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "power",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "maxPower",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "oldPower",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "dtime",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "onoff",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "onaudioprocess"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerDetone",
          "declaration": {
            "name": "KeyerDetone",
            "module": "out-tsc/src/KeyerDetone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerEvent.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerEvent",
          "members": [
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events"
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback"
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered"
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer."
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer."
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext"
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerEvent",
          "declaration": {
            "name": "KeyerEvent",
            "module": "out-tsc/src/KeyerEvent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerInput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerInput",
          "members": [
            {
              "kind": "method",
              "name": "createPaddleWorklet",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "mode"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keyer",
              "type": {
                "text": "string"
              },
              "default": "'nd7pa-b'"
            },
            {
              "kind": "field",
              "name": "swapped",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onmidi",
              "parameters": [
                {
                  "name": "note"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyboardKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "touchKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "mouseKey",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyLeft"
            },
            {
              "kind": "field",
              "name": "keyRight"
            },
            {
              "kind": "field",
              "name": "straightKey",
              "type": {
                "text": "string"
              },
              "default": "'ControlLeft'"
            },
            {
              "kind": "field",
              "name": "leftPaddleKey",
              "type": {
                "text": "string"
              },
              "default": "'AltRight'"
            },
            {
              "kind": "field",
              "name": "rightPaddleKey",
              "type": {
                "text": "string"
              },
              "default": "'ControlRight'"
            },
            {
              "kind": "field",
              "name": "straightMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "field",
              "name": "leftPaddleMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "field",
              "name": "rightPaddleMidi",
              "type": {
                "text": "string"
              },
              "default": "'None'"
            },
            {
              "kind": "field",
              "name": "left"
            },
            {
              "kind": "field",
              "name": "right"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyerList",
              "type": {
                "text": "array"
              },
              "default": "['none', 'nd7pa-a', 'nd7pa-b', 'vk6ph-a', 'vk6ph-b', 'vk6ph-s']"
            },
            {
              "kind": "field",
              "name": "paddle",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "touched",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "pitch",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "gain",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "rise",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "fall",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope2",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "cursor",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyStraight",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "cancel",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "oscillator",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ramp",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerPlayer",
            "module": "/out-tsc/src/KeyerPlayer.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerInput",
          "declaration": {
            "name": "KeyerInput",
            "module": "out-tsc/src/KeyerInput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerInputDelegate.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerInputDelegate",
          "members": [
            {
              "kind": "field",
              "name": "keySounds",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keySlews",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "cursor",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "keyStraight",
              "parameters": [
                {
                  "name": "onoff"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "field",
              "name": "perRawDit",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perDit",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perDah",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIls",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "perIws",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "rise",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fall",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "input",
              "default": "input"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerInputDelegate",
          "declaration": {
            "name": "KeyerInputDelegate",
            "module": "out-tsc/src/KeyerInputDelegate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerMicrophone.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerMicrophone",
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerMicrophone",
          "declaration": {
            "name": "KeyerMicrophone",
            "module": "out-tsc/src/KeyerMicrophone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerMidiSource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerMidiSource",
          "members": [
            {
              "kind": "method",
              "name": "onmidimessage",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "shorten",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "lengthen",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "field",
              "name": "names",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "rawnames",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inputs",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "outputs",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "notes",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "rebind"
            },
            {
              "kind": "method",
              "name": "onStateChange"
            },
            {
              "kind": "method",
              "name": "onMIDISuccess",
              "parameters": [
                {
                  "name": "midiAccess"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMIDIFailure"
            },
            {
              "kind": "method",
              "name": "refresh"
            },
            {
              "kind": "field",
              "name": "midiAvailable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "midiAccess",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "notesCache",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "notesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "namesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "rawNamesList",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerMidiSource",
          "declaration": {
            "name": "KeyerMidiSource",
            "module": "out-tsc/src/KeyerMidiSource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerOutput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerOutput",
          "members": [
            {
              "kind": "method",
              "name": "unsend"
            },
            {
              "kind": "method",
              "name": "send",
              "parameters": [
                {
                  "name": "ch"
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendPending"
            },
            {
              "kind": "method",
              "name": "cancelPending"
            },
            {
              "kind": "field",
              "name": "table",
              "default": "new KeyerTable('itu')"
            },
            {
              "kind": "field",
              "name": "idle",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "pending",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "skipped",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "lastch",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "pitch",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "gain",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "rise",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "fall",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelope2",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "cursor",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "keyStraight",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ],
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "method",
              "name": "cancel",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "oscillator",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "ramp",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "volume",
              "inheritedFrom": {
                "name": "KeyerPlayer",
                "module": "out-tsc/src/KeyerPlayer.js"
              }
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerPlayer",
            "module": "/out-tsc/src/KeyerPlayer.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerOutput",
          "declaration": {
            "name": "KeyerOutput",
            "module": "out-tsc/src/KeyerOutput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPaddleAdapter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPaddleAdapter",
          "members": [
            {
              "kind": "field",
              "name": "adapters",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "adapter",
              "type": {
                "text": "string"
              },
              "default": "'none'"
            },
            {
              "kind": "method",
              "name": "keyEvent",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "onOff"
                },
                {
                  "name": "keyer"
                }
              ]
            },
            {
              "kind": "field",
              "name": "adapterState",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterKeyLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterKeyRight",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "adapterTable",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "adapterTables",
              "type": {
                "text": "object"
              },
              "default": "{ none: { 0: 0, 1: 1, 2: 2, 3: 3 }, ultimatic: { 0: 0, 1: 1, 2: 6, 3: 2, 4: 0, 5: 1, 6: 6, 7: 5 }, 'single lever': { 0: 0, 1: 1, 2: 6, 3: 1, 4: 0, 5: 1, 6: 6, 7: 6 } }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPaddleAdapter",
          "declaration": {
            "name": "KeyerPaddleAdapter",
            "module": "out-tsc/src/KeyerPaddleAdapter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPaddleNd7paProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPaddleNoneProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPaddleVk6phProcessor.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPaddleWorklet.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPaddleWorklet",
          "members": [
            {
              "kind": "method",
              "name": "setTiming"
            },
            {
              "kind": "field",
              "name": "mode"
            },
            {
              "kind": "method",
              "name": "onmessage",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onmessageerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onprocessorerror",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "eparent",
              "default": "eparent"
            },
            {
              "kind": "field",
              "name": "sampleRate"
            },
            {
              "kind": "field",
              "name": "onmessage"
            },
            {
              "kind": "field",
              "name": "onmessageerror"
            },
            {
              "kind": "field",
              "name": "onprocessorerror"
            }
          ],
          "superclass": {
            "name": "AudioWorkletNode",
            "module": "out-tsc/src/KeyerPaddleWorklet.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPaddleWorklet",
          "declaration": {
            "name": "KeyerPaddleWorklet",
            "module": "out-tsc/src/KeyerPaddleWorklet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerPlayer.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerPlayer",
          "members": [
            {
              "kind": "method",
              "name": "connect",
              "parameters": [
                {
                  "name": "target"
                }
              ]
            },
            {
              "kind": "method",
              "name": "disconnect",
              "parameters": [
                {
                  "name": "target"
                }
              ]
            },
            {
              "kind": "field",
              "name": "pitch"
            },
            {
              "kind": "field",
              "name": "gain"
            },
            {
              "kind": "field",
              "name": "rise"
            },
            {
              "kind": "field",
              "name": "fall"
            },
            {
              "kind": "field",
              "name": "envelope"
            },
            {
              "kind": "field",
              "name": "envelope2"
            },
            {
              "kind": "field",
              "name": "envelopes",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "speed",
              "type": {
                "text": "number"
              },
              "default": "20"
            },
            {
              "kind": "field",
              "name": "farnsworth",
              "type": {
                "text": "number"
              },
              "default": "20"
            },
            {
              "kind": "field",
              "name": "weight",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "ratio",
              "type": {
                "text": "number"
              },
              "default": "50"
            },
            {
              "kind": "field",
              "name": "compensation",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "cursor"
            },
            {
              "kind": "method",
              "name": "updateTiming",
              "parameters": [
                {
                  "name": "control"
                },
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keyStraight"
            },
            {
              "kind": "method",
              "name": "keyElement",
              "parameters": [
                {
                  "name": "elen"
                },
                {
                  "name": "slen"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOnAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyOffAt",
              "parameters": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyHoldFor",
              "parameters": [
                {
                  "name": "seconds"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancel"
            },
            {
              "kind": "field",
              "name": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "ask",
              "default": "new KeyerASKWorklet(context, 'keyer-ask-processor', { numberOfInputs: 1, numberOfOutputs: 1, outputChannelCount: [1] }, this)"
            },
            {
              "kind": "field",
              "name": "oscillator"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'sine'"
            },
            {
              "kind": "field",
              "name": "ramp"
            },
            {
              "kind": "field",
              "name": "volume"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerPlayer",
          "declaration": {
            "name": "KeyerPlayer",
            "module": "out-tsc/src/KeyerPlayer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerRamp.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerRamp",
          "members": [
            {
              "kind": "field",
              "name": "ramps",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "rise",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fall",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rise2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fall2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "size"
                },
                {
                  "name": "k"
                },
                {
                  "name": "args"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerRamp",
          "declaration": {
            "name": "KeyerRamp",
            "module": "out-tsc/src/KeyerRamp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerScope.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScope",
          "members": [
            {
              "kind": "method",
              "name": "addSource",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "node"
                },
                {
                  "name": "asByte"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addChannel",
              "parameters": [
                {
                  "name": "source"
                },
                {
                  "name": "scale"
                },
                {
                  "name": "offset"
                },
                {
                  "name": "color"
                }
              ]
            },
            {
              "kind": "field",
              "name": "sources",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "source",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "field",
              "name": "nchannels",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "channels",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "channel",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "field",
              "name": "triggers",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "trigger"
            },
            {
              "kind": "field",
              "name": "triggerValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "triggerChannel"
            },
            {
              "kind": "field",
              "name": "triggerChannelValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "holds",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hold"
            },
            {
              "kind": "field",
              "name": "holdValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "timeScales",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "timeScale"
            },
            {
              "kind": "field",
              "name": "timeScaleValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalScales",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "size"
            },
            {
              "kind": "method",
              "name": "enable",
              "parameters": [
                {
                  "name": "v"
                },
                {
                  "name": "canvas"
                }
              ]
            },
            {
              "kind": "field",
              "name": "running"
            },
            {
              "kind": "method",
              "name": "findTrigger"
            },
            {
              "kind": "method",
              "name": "loop",
              "parameters": [
                {
                  "name": "step"
                }
              ]
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "enabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_running",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_sources",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "sizeMin",
              "type": {
                "text": "number"
              },
              "default": "32"
            },
            {
              "kind": "field",
              "name": "sizeMax"
            },
            {
              "kind": "field",
              "name": "_size"
            },
            {
              "kind": "field",
              "name": "_triggers",
              "type": {
                "text": "object"
              },
              "default": "{ 'none': 0, '+': 1, '-': -1, '*': 2 }"
            },
            {
              "kind": "field",
              "name": "_trigger",
              "type": {
                "text": "string"
              },
              "default": "'+'"
            },
            {
              "kind": "field",
              "name": "_triggerChannel",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "preTrigger",
              "type": {
                "text": "number"
              },
              "default": "32"
            },
            {
              "kind": "field",
              "name": "_holds",
              "type": {
                "text": "object"
              },
              "default": "{ 'none': 0, '100ms': 0.1, '200ms': 0.2, '500ms': 0.5, '1s': 1, '2s': 2, '5s': 5, '10s': 10, '20s': 20, '50s': 50 }"
            },
            {
              "kind": "field",
              "name": "_hold",
              "type": {
                "text": "string"
              },
              "default": "'none'"
            },
            {
              "kind": "field",
              "name": "_timeScales",
              "type": {
                "text": "object"
              },
              "default": "{ '1µs/div': 1e-6, '2µs/div': 2e-6, '5µs/div': 5e-6, '10µs/div': 1e-5, '20µs/div': 2e-5, '50µs/div': 5e-5, '100µs/div': 1e-4, '200µs/div': 2e-4, '500µs/div': 5e-4, '1ms/div': 1e-3, '2ms/div': 2e-3, '5ms/div': 5e-3, '10ms/div': 1e-2, '20ms/div': 2e-2, '50ms/div': 5e-2, '100ms/div': 1e-1, '200ms/div': 2e-1, '500ms/div': 5e-1, '1s/div': 1e+0, '2s/div': 2e+0, '5s/div': 5e+0 }"
            },
            {
              "kind": "field",
              "name": "_timeScale",
              "type": {
                "text": "string"
              },
              "default": "'10ms/div'"
            },
            {
              "kind": "field",
              "name": "_verticalScales",
              "type": {
                "text": "object"
              },
              "default": "{ '1µFS/div': 1e-6, '2µFS/div': 2e-6, '5µFS/div': 5e-6, '10µFS/div': 1e-5, '20µFS/div': 2e-5, '50µFS/div': 5e-5, '100µFS/div': 1e-4, '200µFS/div': 2e-4, '500µFS/div': 5e-4, '1mFS/div': 1e-3, '2mFS/div': 2e-3, '5mFS/div': 5e-3, '10mFS/div': 1e-2, '20mFS/div': 2e-2, '50mFS/div': 5e-2, '100mFS/div': 1e-1, '200mFS/div': 2e-1, '500mFS/div': 5e-1, '1FS/div': 1e+0, '2FS/div': 2e+0, '5FS/div': 5e+0 }"
            },
            {
              "kind": "field",
              "name": "_channels",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "_nchannels",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "sampleRate",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "baseLatency",
              "readonly": true,
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "on",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "on: listen to events",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "off",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "func"
                }
              ],
              "description": "Off: stop listening to event / specific callback",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "args"
                }
              ],
              "description": "Emit: send event, callbacks will be triggered",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "after",
              "parameters": [
                {
                  "name": "dtime"
                },
                {
                  "name": "func"
                }
              ],
              "description": "After: fire an event at some seconds into the future.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "method",
              "name": "when",
              "parameters": [
                {
                  "name": "time"
                },
                {
                  "name": "func"
                }
              ],
              "description": "When: fire an event at a specified time.\nusing the web audio sample timer.",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "default": "audioContext",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            },
            {
              "kind": "field",
              "name": "events",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "KeyerEvent",
                "module": "out-tsc/src/KeyerEvent.js"
              }
            }
          ],
          "superclass": {
            "name": "KeyerEvent",
            "module": "/out-tsc/src/KeyerEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScope",
          "declaration": {
            "name": "KeyerScope",
            "module": "out-tsc/src/KeyerScope.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerScopeChannel.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScopeChannel",
          "members": [
            {
              "kind": "method",
              "name": "createSamples"
            },
            {
              "kind": "field",
              "name": "source",
              "default": "source"
            },
            {
              "kind": "field",
              "name": "sourceValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "enabled",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalScale",
              "default": "scale"
            },
            {
              "kind": "field",
              "name": "verticalScaleValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "verticalOffset",
              "default": "offset"
            },
            {
              "kind": "field",
              "name": "verticalOffsetValue",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "color",
              "default": "color"
            },
            {
              "kind": "field",
              "name": "size",
              "default": "size"
            },
            {
              "kind": "field",
              "name": "scope",
              "default": "scope"
            },
            {
              "kind": "field",
              "name": "analyser"
            },
            {
              "kind": "field",
              "name": "_samples"
            },
            {
              "kind": "field",
              "name": "captured",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScopeChannel",
          "declaration": {
            "name": "KeyerScopeChannel",
            "module": "out-tsc/src/KeyerScopeChannel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerScopeSource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerScopeSource",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "default": "name"
            },
            {
              "kind": "field",
              "name": "node",
              "default": "node"
            },
            {
              "kind": "field",
              "name": "asByte",
              "default": "asByte"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerScopeSource",
          "declaration": {
            "name": "KeyerScopeSource",
            "module": "out-tsc/src/KeyerScopeSource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerTable.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerTable",
          "members": [
            {
              "kind": "method",
              "name": "encode",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "decode",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "transliterate",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "ditLength",
              "parameters": [
                {
                  "name": "string"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setName",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getNames"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "code",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "trans",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "invert",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dits",
              "type": {
                "text": "null"
              },
              "default": "null"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerTable",
          "declaration": {
            "name": "KeyerTable",
            "module": "out-tsc/src/KeyerTable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/KeyerWindow.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyerWindow",
          "members": [
            {
              "kind": "field",
              "name": "windows",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "window",
              "static": true,
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "n"
                },
                {
                  "name": "i"
                },
                {
                  "name": "args"
                }
              ]
            },
            {
              "kind": "method",
              "name": "window2",
              "static": true,
              "parameters": [
                {
                  "name": "type1"
                },
                {
                  "name": "type2"
                },
                {
                  "name": "n"
                },
                {
                  "name": "i"
                },
                {
                  "name": "args"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerWindow",
          "declaration": {
            "name": "KeyerWindow",
            "module": "out-tsc/src/KeyerWindow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/keyer-js.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "KeyerJs",
          "default": "class KeyerJs extends LitElement { // top level state get running() { return this._running; } set running(v) { // console.log(`set running = ${v}, running is ${this.running}`); const oldValue = this._running; if (v !== this._running) { this._running = v; if (v) { // console.log(`calling resume`); this.keyer.context.resume(); // this cures need to twiddle the gain to get iambic keying to work // I wish I understood why // this.gain += 1; // this.gain -= 1; } else { this.keyer.context.suspend(); } this.requestUpdate('running', oldValue); } // console.log(`set running = ${v}, running is now ${this.running} and state is ${this.keyer!.context.state}`); } // principal keyer controls set speed(v) { if (this.keyer) { this.keyer.output.speed = v; this.keyer.input.speed = v; } } get speed() { return this.keyer ? this.keyer.output.speed : getControl('speed').value; } set gain(v) { if (this.keyer) { this.keyer.output.gain = v; // console.log(`setting gain to ${v}`); // console.trace(); this.keyer.input.gain = v; // console.log(`setting inputGain to ${v}`); } } get gain() { return this.keyer ? this.keyer.output.gain : getControl('gain').value; } set pitch(v) { if (this.keyer) { this.keyer.output.pitch = v; this.keyer.input.pitch = v; } } get pitch() { return this.keyer ? this.keyer.output.pitch : getControl('pitch').value; } set farnsworth(v) { if (this.keyer) { this.keyer.output.farnsworth = v; this.keyer.input.farnsworth = v; } } get farnsworth() { return this.keyer ? this.keyer.output.farnsworth : getControl('farnsworth').value; } set weight(v) { if (this.keyer) { this.keyer.output.weight = v; this.keyer.input.weight = v; } } get weight() { return this.keyer ? this.keyer.output.weight : getControl('weight').value; } set ratio(v) { if (this.keyer) { this.keyer.output.ratio = v; this.keyer.input.ratio = v; } } get ratio() { return this.keyer ? this.keyer.output.ratio : getControl('ratio').value; } set compensation(v) { if (this.keyer) { this.keyer.output.compensation = v; this.keyer.input.compensation = v; } } get compensation() { return this.keyer ? this.keyer.output.compensation : getControl('compensation').value; } set rise(v) { if (this.keyer) { this.keyer.output.rise = v; this.keyer.input.rise = v; } } get rise() { return this.keyer ? this.keyer.output.rise : getControl('rise').value; } set fall(v) { if (this.keyer) { this.keyer.output.fall = v; this.keyer.input.fall = v; } } get fall() { return this.keyer ? this.keyer.output.fall : getControl('fall').value; } set envelope(v) { if (this.keyer) { this.keyer.output.envelope = v; this.keyer.input.envelope = v; } } get envelope() { return this.keyer ? this.keyer.output.envelope : getControl('envelope').value; } set envelope2(v) { if (this.keyer) { this.keyer.output.envelope2 = v; this.keyer.input.envelope2 = v; } } get envelope2() { return this.keyer ? this.keyer.output.envelope2 : getControl('envelope2').value; } // iambic keyer get paddleKeyers() { return this.keyer ? this.keyer.input.keyers : []; } set paddleKeyer(v) { if (this.keyer) this.keyer.input.keyer = v; } get paddleKeyer() { return this.keyer ? this.keyer.input.keyer : getControl('paddleKeyer').value; } set paddleSwapped(v) { if (this.keyer) this.keyer.input.swapped = v; } get paddleSwapped() { return this.keyer ? this.keyer.input.swapped : getControl('paddleSwapped').value; } set straightKey(v) { if (this.keyer) this.keyer.input.straightKey = v; } get straightKey() { return this.keyer ? this.keyer.input.straightKey : getControl('straightKey').value; } set leftPaddleKey(v) { if (this.keyer) this.keyer.input.leftPaddleKey = v; } get leftPaddleKey() { return this.keyer ? this.keyer.input.leftPaddleKey : getControl('leftPaddleKey').value; } set rightPaddleKey(v) { if (this.keyer) this.keyer.input.rightPaddleKey = v; } get rightPaddleKey() { return this.keyer ? this.keyer.input.rightPaddleKey : getControl('rightPaddleKey').value; } set straightMidi(v) { if (this.keyer) this.keyer.input.straightMidi = v; } get straightMidi() { return this.keyer ? this.keyer.input.straightMidi : getControl('straightMidi').value; } set leftPaddleMidi(v) { if (this.keyer) this.keyer.input.leftPaddleMidi = v; } get leftPaddleMidi() { return this.keyer ? this.keyer.input.leftPaddleMidi : getControl('leftPaddleMidi').value; } set rightPaddleMidi(v) { if (this.keyer) this.keyer.input.rightPaddleMidi = v; } get rightPaddleMidi() { return this.keyer ? this.keyer.input.rightPaddleMidi : getControl('rightPaddleMidi').value; } // scope set scopeRunning(v) { if (this.keyer) this.keyer.scope.running = v; } get scopeRunning() { return this.keyer ? this.keyer.scope.running : false; } get scopeTriggers() { return this.keyer ? this.keyer.scope.triggers : []; } set scopeTrigger(v) { if (this.keyer) this.keyer.scope.trigger = v; } get scopeTrigger() { return this.keyer ? this.keyer.scope.trigger : getControl('scopeTrigger').value; } set scopeTriggerChannel(v) { if (this.keyer) this.keyer.scope.triggerChannel = v; } get scopeTriggerChannel() { return this.keyer ? this.keyer.scope.triggerChannel : getControl('scopeTriggerChannel').value; } get scopeChannels() { return this.keyer ? this.keyer.scope.channels : []; } set scopeHold(v) { if (this.keyer) this.keyer.scope.hold = v; } get scopeHold() { return this.keyer ? this.keyer.scope.hold : getControl('scopeHold').value; } get scopeHolds() { return this.keyer ? this.keyer.scope.holds : []; } set scopeTimeScale(v) { if (this.keyer) this.keyer.scope.timeScale = v; } get scopeTimeScale() { return this.keyer ? this.keyer.scope.timeScale : getControl('scopeTimeScale').value; } get scopeTimeScales() { return this.keyer ? this.keyer.scope.timeScales : []; } // scope channel properties get scopeSources() { return this.keyer ? this.keyer.scope.sources : []; } set scopeSource1(v) { if (this.keyer) this.keyer.scope.channel(1).source = v; } get scopeSource1() { return this.keyer ? this.keyer.scope.channel(1).source : getControl('scopeSource1').value; } set scopeVerticalScale1(v) { if (this.keyer) this.keyer.scope.channel(1).verticalScale = v; } get scopeVerticalScale1() { return this.keyer ? this.keyer.scope.channel(1).verticalScale : getControl('scopeVerticalScale1').value; } set scopeVerticalOffset1(v) { if (this.keyer) this.keyer.scope.channel(1).verticalOffset = v; } get scopeVerticalOffset1() { return this.keyer ? this.keyer.scope.channel(1).verticalOffset : getControl('scopeVerticalOffset1').value; } set scopeSource2(v) { if (this.keyer) this.keyer.scope.channel(2).source = v; } get scopeSource2() { return this.keyer ? this.keyer.scope.channel(2).source : getControl('scopeSource2').value; } set scopeVerticalScale2(v) { if (this.keyer) this.keyer.scope.channel(2).verticalScale = v; } get scopeVerticalScale2() { return this.keyer ? this.keyer.scope.channel(2).verticalScale : getControl('scopeVerticalScale2').value; } set scopeVerticalOffset2(v) { if (this.keyer) this.keyer.scope.channel(2).verticalOffset = v; } get scopeVerticalOffset2() { return this.keyer ? this.keyer.scope.channel(2).verticalOffset : getControl('scopeVerticalOffset2').value; } set scopeSource3(v) { if (this.keyer) this.keyer.scope.channel(3).source = v; } get scopeSource3() { return this.keyer ? this.keyer.scope.channel(3).source : getControl('scopeSource3').value; } set scopeVerticalScale3(v) { if (this.keyer) this.keyer.scope.channel(3).verticalScale = v; } get scopeVerticalScale3() { return this.keyer ? this.keyer.scope.channel(3).verticalScale : getControl('scopeVerticalScale3').value; } set scopeVerticalOffset3(v) { if (this.keyer) this.keyer.scope.channel(3).verticalOffset = v; } get scopeVerticalOffset3() { return this.keyer ? this.keyer.scope.channel(3).verticalOffset : getControl('scopeVerticalOffset3').value; } set scopeSource4(v) { if (this.keyer) this.keyer.scope.channel(4).source = v; } get scopeSource4() { return this.keyer ? this.keyer.scope.channel(4).source : getControl('scopeSource4').value; } set scopeVerticalScale4(v) { if (this.keyer) this.keyer.scope.channel(4).verticalScale = v; } get scopeVerticalScale4() { return this.keyer ? this.keyer.scope.channel(4).verticalScale : getControl('scopeVerticalScale4').value; } set scopeVerticalOffset4(v) { if (this.keyer) this.keyer.scope.channel(4).verticalOffset = v; } get scopeVerticalOffset4() { return this.keyer ? this.keyer.scope.channel(4).verticalOffset : getControl('scopeVerticalOffset4').value; } // read only keyer.context values get state() { return this.keyer ? this.keyer.context.state : ''; } get sampleRate() { return this.keyer ? this.keyer.sampleRate : 0; } get currentTime() { return this.keyer ? this.keyer.currentTime : 0; } get baseLatency() { return this.keyer ? this.keyer.baseLatency : 0; } get scopeVerticalScales() { return this.keyer ? this.keyer.scope.verticalScales : []; } // property getters and setters // keyer properties for manual keyer // manual keyer properties // scope properties setScopeChannel(control, channel, value) { if (this.keyer) this.keyer.scope.channel(channel)[control] = value; } getScopeChannel(control, channel) { return this.keyer ? this.keyer.scope.channel(channel)[control] : 0; } constructor() { super(); // miscellany this._running = false; this.keyer = null; this.keyboardFocused = false; this.sections = startSections(); this.selected = startInitialSelected(); /* // input keyer minimum properties @property({ type: Number }) set inputSpeed(v) { if (this.keyer) this.keyer!.input.speed = v; } get inputSpeed() { return this.keyer ? this.keyer!.input.speed : getControl('inputSpeed').value; } @property({ type: Number }) set inputGain(v) { if (this.keyer) { this.keyer!.input.gain = v; // console.log(`setting inputGain to ${v}`); } } get inputGain() { return this.keyer ? Math.round(this.keyer!.input.gain) : getControl('inputGain').value; } @property({ type: Number }) set inputPitch(v) { if (this.keyer) this.keyer!.input.pitch = v; } get inputPitch() { return this.keyer ? this.keyer!.input.pitch : getControl('inputPitch').value; } @property({ type: Number }) set inputFarnsworth(v) { if (this.keyer) this.keyer!.input.farnsworth = v; } get inputFarnsworth() { return this.keyer ? this.keyer!.input.farnsworth : getControl('inputFarnsworth').value; } @property({ type: Number }) set inputWeight(v) { if (this.keyer) this.keyer!.input.weight = v; } get inputWeight() { return this.keyer ? this.keyer!.input.weight : getControl('inputWeight').value; } @property({ type: Number }) set inputRatio(v) { if (this.keyer) this.keyer!.input.ratio = v; } get inputRatio() { return this.keyer ? this.keyer!.input.ratio : getControl('inputRatio').value; } @property({ type: Number }) set inputCompensation(v) { if (this.keyer) this.keyer!.input.compensation = v; } get inputCompensation() { return this.keyer ? this.keyer!.input.compensation : getControl('inputCompensation').value; } @property({ type: Number }) set inputRise(v) { if (this.keyer) this.keyer!.input.rise = v; } get inputRise() { return this.keyer ? this.keyer!.input.rise : getControl('inputRise').value; } @property({ type: Number }) set inputFall(v) { if (this.keyer) this.keyer!.input.fall = v; } get inputFall() { return this.keyer ? this.keyer!.input.fall : getControl('inputFall').value; } @property({ type: Array }) get envelopes() { return this.keyer ? this.keyer!.output.envelopes : []; } @property({ type: String }) set inputEnvelope(v) { if (this.keyer) this.keyer!.input.envelope = v; } get inputEnvelope() { return this.keyer ? this.keyer!.input.envelope : getControl('inputEnvelope').value; } @property({ type: String }) set inputEnvelope2(v) { if (this.keyer) this.keyer!.input.envelope2 = v; } get inputEnvelope2() { return this.keyer ? this.keyer!.input.envelope2 : getControl('inputEnvelope2').value; } */ // miscellany this.requestedSampleRate = '48000'; // read only midi flag this.midiAvailable = false; // read only values supplying options lists // most are constant, midiNotes changes // shift keys which can be used as key simulators // in truth, if I ignored repeats, then any key would work this.shiftKeys = [ 'None', 'ShiftLeft', 'ControlLeft', 'AltLeft', 'AltRight', 'ControlRight', 'ShiftRight', ]; this.midiNotes = []; this.sampleRates = [ '8000', '32000', '44100', '48000', '96000', '192000', '384000', ]; // tty window content this.content = html ``; this.finished = []; this.pending = []; this._running = false; this.keyer = null; // only initialize the properties neede for startup this.sections = startSections(); this.selected = startInitialSelected(); } async start() { // start the engine // retrieve the preferred sample rate this.controlSetDefaultValue('requestedSampleRate', false); // create the audio context const context = new AudioContext({ sampleRate: parseInt(this.requestedSampleRate, 10), }); // load the worklet processors await context.audioWorklet.addModule('src/KeyerASKProcessor.js'); await context.audioWorklet.addModule('src/KeyerPaddleNoneProcessor.js'); await context.audioWorklet.addModule('src/KeyerPaddleNd7paProcessor.js'); await context.audioWorklet.addModule('src/KeyerPaddleVk6phProcessor.js'); // build the keyer this.keyer = new Keyer(context); // set the section lists this.sections = runSections(); this.selected = runInitialSelected(); // load some constants into the instance // using localStorage to persist defaults between sessions // defaults set at top of file this.controlSetDefaultValues(false); this.running = true; this.clear(); // this.keyer!.outputDecoder.on('letter', (ltr, code) => console.log(`output '${ltr}' '${code}'`)); this.keyer.inputDecoder.on('letter', (ltr) => this.onkeyed(ltr)); this.keyer.output.on('sent', (ltr) => this.onsent(ltr)); this.keyer.output.on('unsent', (ltr) => this.onunsent(ltr)); this.keyer.output.on('skipped', (ltr) => this.onskipped(ltr)); this.keyer.midiSource.on('midi:notes', () => this.requestUpdate('midiNotes', [])); document.addEventListener('keydown', (e) => this.keyer.input.keyboardKey(e, true)); document.addEventListener('keyup', (e) => this.keyer.input.keyboardKey(e, false)); } // // teletype window // onFocus() { // console.log(\"keyboard focus\"); this.keyboardFocused = true; this.updateContent(); // show cursor } onBlur() { // console.log(\"keyboard blur\"); this.keyboardFocused = false; this.updateContent(); // hide cursor } updated( /* propertiesChanged */) { if (this.keyboardFocused) { // scroll the div up if the cursor goes off bottom of div const keyboard = this.renderRoot.querySelector('.keyboard'); const cursor = this.renderRoot.querySelector('.blinker'); const fromBottom = cursor.offsetTop + cursor.offsetHeight - keyboard.offsetTop - keyboard.offsetHeight; if (fromBottom > 0) keyboard.scrollTop += cursor.offsetHeight; } if (this.keyer && this.keyer.scope && !this.keyer.scope.enabled) { if (this.selected.includes('scope')) { const canvas = this.renderRoot.querySelector('canvas'); if (canvas) this.keyer.scope.enable(true, canvas); } else { this.keyer.scope.enable(false, null); } } } processFinished() { return this.finished.map(tagText => { const [tag, text] = tagText; return html `<span class=\"${tag}\">${text}</span>`; }); } blinkenCursen() { return this.keyboardFocused ? html `<span class=\"blinker\">|</span>` : html `<span class=\"blinker\"></span>`; } updateContent() { this.content = html `${this.processFinished()}<span class=\"pending\" >${this.pending.join('')}</span >${this.blinkenCursen()}`; } appendFinished(tag, text) { if (this.finished.length === 0) this.finished.push([tag, text]); else { const [ltag, ltext] = this.finished[this.finished.length - 1]; if (tag === ltag) this.finished[this.finished.length - 1] = [tag, `${ltext}${text}`]; else this.finished.push([tag, text]); } } // this is for input keyed manually as opposed to typed on the keyboard // it has the same presentation as sent by default onkeyed(ltr) { this.appendFinished('sent', ltr.toLowerCase()); this.updateContent(); } ttyKeydown(e) { // may need to handle ctrl-V for paste // may need to preventDefault on Space to avoid autoscroll // may need to catch Escape as cancel key // console.log(`ttyKeydown '${e.key}'`); if (e.isComposing || e.altKey || e.metaKey || e.ctrlKey) { // log.textContent = `keydown code ${e.code} key ${e.key} CAMS ${e.ctrlKey} ${e.altKey} ${e.metaKey} ${e.shiftKey}`; } else if (isMorse(e.key)) { this.pending.push(e.key); this.keyer.output.send(e.key); this.updateContent(); if (e.key === ' ') e.preventDefault(); } else if (e.key === 'Backspace') { this.keyer.output.unsend(); // e.data // this.pending.pop(); the pop happens when the unsent confirmation comes back this.updateContent(); } else if (e.key === 'Enter') { this.pending.push('\\n'); this.keyer.output.send('\\n'); this.updateContent(); } else if (e.key === 'Escape') { this.cancel(); } } clear() { this.finished = [['sent', '']]; this.pending = []; this.updateContent(); } cancel() { this.keyer.output.cancel(); this.keyer.output.cancelPending(); this.updateContent(); } onsent(ltr) { const chr = this.pending.shift(); if (ltr !== chr) { console.log(`onsent ${ltr} not first in pending ${chr}`); } this.appendFinished('sent', ltr); this.updateContent(); } onunsent(ltr) { const chr = this.pending.pop(); if (ltr !== chr) { console.log(`onunsent ${ltr} not last in pending ${chr}`); } this.updateContent(); } onskipped(ltr) { const chr = this.pending.shift(); if (chr) { if (ltr !== chr) { console.log(`onskipped ${ltr} not first in pending ${chr}`); } this.appendFinished('skipped', chr); this.updateContent(); } } // use the mouse translations, so they also work with mice mouseDown(e) { console.log(`mouseDown ${e.target.name} in ${this}`); const type = e.target.name; this.keyer.input.mouseKey(e, type, true); } mouseUp(e) { console.log(`mouseUp ${e.target.name} in ${this}`); const type = e.target.name; this.keyer.input.mouseKey(e, type, false); } touchDown(e) { e.preventDefault(); console.log(`mouseDown ${e.target.name} in ${this}`); const type = e.target.name; this.keyer.input.mouseKey(e, type, true); } touchUp(e) { e.preventDefault(); console.log(`mouseUp ${e.target.name} in ${this}`); const type = e.target.name; this.keyer.input.mouseKey(e, type, false); } // control manipulation controlSetDefaultValue(control, forceDefault) { const JSONparse = (value) => { try { return JSON.parse(value); } catch (e) { return undefined; } }; const controlDefault = (defaultValue) => { const localValue = JSONparse(localStorage[control]); const value = forceDefault || alwaysForceDefault || localValue === undefined ? defaultValue : localValue; localStorage[control] = JSON.stringify(value); return value; }; if ('value' in getControl(control)) { this[control] = controlDefault(getControl(control).value); } } controlSetDefaultValues(forceDefault) { Object.keys(controls).forEach(control => this.controlSetDefaultValue(control, forceDefault)); } controlUpdate(control, oldv, newv) { this[control] = newv; const c = getControl(control); if ('value' in c) localStorage[control] = JSON.stringify(newv); if ('lit' in c) this.requestUpdate(control, oldv); if (control === 'requestedSampleRate') this.start(); } controlToggle(control) { this.controlUpdate(control, this[control], !this[control]); } controlSelect(control, e) { this.controlUpdate(control, this[control], e.target.value); } scopeResize() { if (this.selected.includes('scope')) { this.keyer.scope.enable(false, null); const canvas = this.renderRoot.querySelector('canvas'); if (canvas) this.keyer.scope.enable(true, canvas); } } // styles static get styles() { return css ` :host { min-height: 100vh; width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: flex-start; font-size: calc(10px + 2vmin); color: black; margin: 0; text-align: center; } .h1 { font-size: 2em; margin: 0.33em 0; } .h2 { font-size: 1.5em; margin: 0.38em 0; } .h3 { font-size: 1.17em; margin: 0.42em 0; } .h5 { font-size: 0.83em; margin: 0.75em 0; } .h6 { font-size: 0.75em; margin: 0.84em 0; } .h1, .h2, .h3, .h4, .h5, .h6 { font-weight: bolder; width: 60%; text-align: left; } .logo > svg { margin-left: 5%; max-width: 90%; margin-top: 16px; } main { flex-grow: 1; width: 90%; margin: auto; display: flex; flex-flow: column; } div.hidden, div.group.hidden { display: none; } div.shown { display: block; } div.app-bar, div.selector, div.section, div.app-footer { width: 90%; margin: auto; } button, select, input { font-size: calc(10px + 2vmin); } input[type='number'][size='5'] { width: 3.25em; } input[type='number'][size='4'] { width: 2.5em; } input[type='number'][size='3'] { width: 2em; } div.panel { margin: auto; width: 90%; } div.subpanel { margin: auto; width: 100%; } div.keyboard { display: inline-block; padding: 10px; text-align: left; white-space: pre-wrap; margin-top: 16px; margin: auto; width: 90%; height: 300px; overflow-wrap: break-word; overflow-y: auto; border: 1px solid #9e9e9e; color: #000000; } div.group { display: inline-block; } .sent { color: #888; } .keyed { color: #aaaa; } .skipped { color: #888; text-decoration: line-through; } .blinker { font-weight: 100; color: #2e3d48; -webkit-animation: 1s blink step-end infinite; animation: 1s blink step-end infinite; } @-webkit-keyframes \"blink\" { from, to { color: transparent; } 50% { color: black; } } @keyframes \"blink\" { from, to { color: transparent; } 50% { color: black; } } div.scope canvas { width: 90%; height: 400px; border: 1px solid black; background: #fff; background-size: 50px 50px; background-image: linear-gradient(to right, grey 1px, transparent 1px), linear-gradient(to bottom, grey 1px, transparent 1px); } .app-footer { font-size: calc(12px + 0.5vmin); align-items: center; } .app-footer a { margin-left: 5px; } `; } // render a user interface control element controlRender(control) { const ctl = getControl(control); if (!ctl) return html `<h1>No controlRender for ${control}</h1>`; switch (ctl.type) { // slider adjusts a number between a min and a max by step case 'slider': { const { min, max, step, label, unit, title } = ctl; return html ` <div class=\"group slider\" title=\"${title}\" style=\"display: flex; flex-flow: column;\" > <div class=\"slider-header\">${label}</div> <div class=\"slider-main\"> <sl-input type=\"range\" name=\"${control}\" min=\"${min}\" max=\"${max}\" step=\"${step}\" .value=${this[control]} @sl-input=${(e) => this.controlSelect(control, e)} ></sl-input> </div> <div class=\"slider-unit\">${unit}</div> </div>`; } // spinner adjusts a number between a min and a max by step case 'spinner': { const { min, max, step, label, unit, title } = ctl; // , size return html ` <div class=\"group spinner\" title=\"${title}\" style=\"display: flex; flex-flow: column;\" > <div class=\"slider-header\">${label}</div> <div class=\"slider-main\"> <sl-input type=\"number\" name=\"${control}\" min=\"${min}\" max=\"${max}\" step=\"${step}\" .value=${this[control]} @sl-input=${(e) => this.controlSelect(control, e)} ></sl-input> </div> <div class=\"slider-unit\">(${unit})</div> </div>`; } // options displays a list of options for selection case 'options': { const { options, label, title } = ctl; return html ` <div class=\"group options\" title=\"${title}\"> <div> <label for=\"${control}\" >${label} <select name=\"${control}\" value=\"${this[control]}\" @change=${(e) => this.controlSelect(control, e)} > ${this[options].map((x) => html `<option .value=${x} ?selected=${x === this[control]} > ${x} </option>`)} </select> </label> </div> </div> `; } // a toggle button shows one of two labels case 'toggle': { const { label, on, off, title } = ctl; return html ` <div class=\"group\" title=\"${title}\"> <label for=\"${control}\" >${label} <button name=\"${control}\" role=\"switch\" aria-checked=${this[control]} @click=${() => this.controlToggle(control)} > ${this[control] ? on : off} </button></label > </div> `; } // a shape shows two lists of envelope functions // which are multiplied together to provide a final envelop case 'shape': { const { label, envelope1, envelope2, title } = ctl; return html ` <div class=\"group\" title=\"${title}\"> <label >${label}: ${this.controlRender(envelope1)} * ${this.controlRender(envelope2)} </label> </div> `; } // a check button shows a label with a filled or unfilled checkbox case 'check': { const { label, title } = ctl; return html ` <div class=\"group\" title=\"${title}\"> <button role=\"switch\" aria-checked=${this[control]} @click=${() => this.controlToggle(control)} > ${this[control] ? checkedCheckBox : uncheckedCheckBox} ${label} </button> </div> `; } default: return html `<h1> No controlRender for ${control} with type ${ctl.type} </h1>`; } } onSelectInput(e) { const { value } = e.target; // console.log(`onSelectInput choose '${value}'`); this.selected = value; } sectionIsShown(control) { return this.selected.includes(control) ? 'shown' : 'hidden'; } sectionClasses(control) { return `section ${control} ${this.sectionIsShown(control)}`; } render() { const { selected } = this; return html ` <div class=\"app-bar\" style=\"display: flex; flexflow: row nowrap;\"> <div class=\"logo\">${keyerLogo}</div> <div><h1>keyer.js</h1></div> </div> <main> <div class=\"selector\"> <hr /> <sl-select name=\"section\" title=\"Select the component(s) of the keyer to control.\" .value=${selected} @sl-input=${this.onSelectInput} multiple > ${this.sections.map(sect => html ` <sl-option value=\"${sect}\" title=\"${sectionTitle(sect)}\"> ${sect} </sl-option>`)} </sl-select> </div> <div class=\"${this.sectionClasses('start')}\" title=\"${sectionTitle('start')}\" > <hr /> <button class=\"start\" @click=${this.start}> <span>${playSymbol}</span> </button> <br /> <h2>Press play to start the keyer.</h2> <p></p> </div> <div class=\"${this.sectionClasses('entry')}\" title=\"${sectionTitle('entry')}\" > <hr /> <div class=\"subsection keyboard\" tabindex=\"0\" @keydown=${this.ttyKeydown} @focus=${this.onFocus} @blur=${this.onBlur} > ${this.content} </div> <div class=\"subsection panel\" title=\"Controls for the keyboard entry area.\" > ${this.controlRender('running')} <button @click=${this.clear}><span>Clear</span></button> <button @click=${this.cancel}><span>Cancel</span></button> </div> </div> <div class=\"${this.sectionClasses('touch')}\" title=\"${sectionTitle('touch')}\" > <hr /> <div style=\"display: flex; flex-flow: row nowrap;\"> ${['straight', 'left', 'right'].map(label => html `<sl-button name=\"${label}\" pill size=\"large\" @mousedown=${this.mouseDown} @mouseup=${this.mouseUp} @touchstart=${this.mouseDown} @touchend=${this.mouseUp} > ${label} </sl-button>`)} </div> </div> <div class=\"${this.sectionClasses('basic')}\" title=\"${sectionTitle('basic')}\" > <hr /> <div style=\"display: flex; flex-flow: row nowrap;\"> ${this.controlRender('speed')} ${this.controlRender('gain')} ${this.controlRender('pitch')} ${this.controlRender('farnsworth')} </div> </div> <div class=\"${this.sectionClasses('timing')}\" title=\"${sectionTitle('timing')}\" > <hr /> <div style=\"display: flex; flex-flow: row nowrap;\"> <div style=\"display: flex; flex-flow: row nowrap;\"> ${this.controlRender('weight')} ${this.controlRender('ratio')} ${this.controlRender('compensation')} </div> </div> </div> <div class=\"${this.sectionClasses('envelope')}\" title=\"${sectionTitle('envelope')}\" > <hr /> <div style=\"display: flex; flex-flow: row nowrap;\"> ${this.controlRender('rise')} ${this.controlRender('fall')} </div> ${this.controlRender('shape')} </div> <div class=\"${this.sectionClasses('paddle')}\" title=\"${sectionTitle('paddle')}\" > <hr /> <div class=\"group paddle-options\" title=\"Paddle options.\" style=\"display: flex; flex-flow: row nowrap;\" > ${this.controlRender('paddleKeyer')} ${this.controlRender('paddleSwapped')} </div> <div class=\"group keybd-keys\" style=\"display: flex; flex-flow: row nowrap\" title=\"Keyboard keys used for manual keying.\" > ${this.controlRender('straightKey')} ${this.controlRender('leftPaddleKey')} ${this.controlRender('rightPaddleKey')} </div> <div class=\"group midi-notes ${this.midiAvailable ? '' : ' hidden'}\" title=\"MIDI device notes used for manual keying.\" style=\"display: flex; flex-flow: row nowrap\" > ${this.controlRender('straightMidi')} ${this.controlRender('leftPaddleMidi')} ${this.controlRender('rightPaddleMidi')} </div> </div> <div class=\"${this.sectionClasses('misc')}\" title=\"${sectionTitle('misc')}\" > <hr /> ${this.controlRender('requestedSampleRate')} <label >Reset default values: <button @click=${() => this.controlSetDefaultValues(true)}> Reset </button> </label> </div> <div class=\"${this.sectionClasses('about')}\" title=\"${sectionTitle('about')}\" > <hr /> <p> <b>Keyer.js</b> implements a morse code keyer in a web page. The text window translates typed text into morse code which plays on the browser's audio output. Keyboard keys and MIDI notes can be interpreted as switch closures for directly keying morse. Directly keyed input is played on the browser's audio output and decoded into the text window. </p> <p> The <b>Settings</b> panel controls the generated morse code and other aspects of the prog. </p> <p> The <b>Status</b> panel shows the status of the web audio, the time since the system started, the sample rate, the estimated latency, and whether MIDI is available. </p> <p> The <b>Scope</b> panel allows the wave forms of the keyer to be displayed. </p> <p>This <b>About</b> panel gives a brief introduction to the app.</p> <p>The <b>License</b> panel describes the licenscing of the app.</p> </div> <div class=\"${this.sectionClasses('license')}\" title=\"${sectionTitle('license')}\" > <hr /> <p>keyer.js - a progressive web app for morse code</p> <p> Copyright (c) 2020 Roger E Critchlow Jr, Charlestown, MA, USA<br /> Copyright (c) 2024 Roger E Critchlow Jr, Las Cruces, NM, USA </p> <p> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. </p> <p> This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. </p> <p> You should have received a copy of the GNU General Public License along with this program. If not, see <a href=\"https://www.gnu.org/licenses/\">gnu.org/licenses</a>. </p> </div> <div class=\"${this.sectionClasses('colophon')}\" title=\"${sectionTitle('colophon')}\" > <hr /> <p>keyer.js was written with emacs on a laptop running Ubuntu.</p> <p> The algorithms in keyer.js were developed for <a href=\"https://github.com/recri/keyer\">keyer</a>, a collection of software defined radio software built using Jack, Tcl, and C. </p> <p> The polymer project, the PWA starter kit, open-wc, lit-element, lit-html, web audio, web MIDI. </p> <p> The source for <a href=\"https://github.com/recri/keyer.js\">keyer.js</a> </p> </div> <div class=\"${this.sectionClasses('scope')}\" title=\"${sectionTitle('scope')}\" > <hr /> <div class=\"scope\"><canvas @resize=${this.scopeResize}></canvas></div> ${this.controlRender('scopeRunning')} ${this.controlRender('scopeTrigger')} ${this.controlRender('scopeTriggerChannel')} ${this.controlRender('scopeHold')} <br /> ${this.controlRender('scopeTimeScale')} <br /> <b>ch1</b> ${this.controlRender('scopeSource1')} ${this.controlRender('scopeVerticalScale1')} ${this.controlRender('scopeVerticalOffset1')} <br /> <b>ch2</b> ${this.controlRender('scopeSource2')} ${this.controlRender('scopeVerticalScale2')} ${this.controlRender('scopeVerticalOffset2')} <br /> <b>ch3</b> ${this.controlRender('scopeSource3')} ${this.controlRender('scopeVerticalScale3')} ${this.controlRender('scopeVerticalOffset3')} <br /> <b>ch4</b> ${this.controlRender('scopeSource4')} ${this.controlRender('scopeVerticalScale4')} ${this.controlRender('scopeVerticalOffset4')} </div> <div class=\"${this.sectionClasses('status')}\" title=\"${sectionTitle('status')}\" > <hr /> State: ${this.state}<br /> Sample rate: ${this.sampleRate}<br /> Current time: ${this.currentTime.toFixed(3)}<br /> Base latency: ${this.baseLatency.toFixed(3)}<br /> Midi available: ${this.midiAvailable}<br /> </div> <div class=\"${this.sectionClasses('controls')}\" title=\"${sectionTitle('controls')}\" > <hr /> ${Object.keys(controls).map(control => html `<div>${control} - ${getControl(control).value}</div>`)} </div> <hr /> <div class=\"${this.sectionClasses('locals')}\" title=\"${sectionTitle('locals')}\" > ${Object.keys(controls).map(control => html `<div>${control} - ${localStorage[control]}</div>`)} </div> </main> <div class=\"app-footer\"> <hr /> 🚽 Made with thanks to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/open-wc\" >open-wc</a >. </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyerJs",
          "declaration": {
            "name": "KeyerJs",
            "module": "out-tsc/src/keyer-js.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/keyer-logo.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "keyerLogo",
          "default": "html ` <svg width=\"512px\" height=\"128px\" viewBox=\"0 192 512 128\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <g id=\"Page-1\" stroke=\"#1d62a7\" stroke-width=\"16\" fill=\"none\" fill-rule=\"evenodd\"> <line x1=\"384\" y1=\"224\" x2=\"448\" y2=\"224\" id=\"knob\"></line> <line x1=\"64\" y1=\"288\" x2=\"320\" y2=\"288\" id=\"base\" ></line> <polyline points=\"64,224 320,224 371.2,274 422.4,274\" id=\"key\"></polyline> <ellipse cx=\"148.5\" cy=\"224\" rx=\"16\" ry=\"16\" fill=\"#1d62a7\" stroke=\"#ffffff\" stroke-width=\"1\" id=\"hinge\"></ellipse> </g> </svg> `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyerLogo",
          "declaration": {
            "name": "keyerLogo",
            "module": "out-tsc/src/keyer-logo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/keyer-js.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "App"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/keyer-js.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "out-tsc/stories/keyer-js.stories.js"
          }
        }
      ]
    }
  ]
}
